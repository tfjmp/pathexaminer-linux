kernel/fork.c:2023:37: warning: always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) long _do_fork(unsigned long clone_flags,
                                     ^
kernel/fork.c:1542:76: warning: always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) static __latent_entropy struct task_struct *copy_process(
                                                                            ^
Building the rich basic blocks
About to build basic block 0
is it a loop? false
Building a regular RichBasicBlock 0
About to build basic block 2
is it a loop? false
Building a regular RichBasicBlock 2
    has flow: false    has LSM: false
About to build basic block 3
is it a loop? false
Building a regular RichBasicBlock 3
    has flow: false    has LSM: false
About to build basic block 4
is it a loop? false
Building a regular RichBasicBlock 4
    has flow: false    has LSM: false
About to build basic block 5
is it a loop? false
Building a regular RichBasicBlock 5
    has flow: false    has LSM: false
About to build basic block 6
is it a loop? false
Building a regular RichBasicBlock 6
    has flow: false    has LSM: false
About to build basic block 7
is it a loop? false
Building a regular RichBasicBlock 7
    has flow: false    has LSM: false
About to build basic block 8
is it a loop? false
Building a regular RichBasicBlock 8
GIMPLE CALL
GIMPLE CALL with a decl
name: kayrebt_FlowNodeMarker	isLSM: false	isFlow: true
    has flow: true    has LSM: false
About to build basic block 9
is it a loop? false
Building a regular RichBasicBlock 9
    has flow: false    has LSM: false
About to build basic block 10
is it a loop? false
Building a regular RichBasicBlock 10
    has flow: false    has LSM: false
About to build basic block 11
is it a loop? false
Building a regular RichBasicBlock 11
    has flow: false    has LSM: false
About to build basic block 12
is it a loop? false
Building a regular RichBasicBlock 12
    has flow: false    has LSM: false
About to build basic block 13
is it a loop? false
Building a regular RichBasicBlock 13
    has flow: false    has LSM: false
About to build basic block 14
is it a loop? false
Building a regular RichBasicBlock 14
    has flow: false    has LSM: false
About to build basic block 15
is it a loop? false
Building a regular RichBasicBlock 15
GIMPLE CALL
GIMPLE CALL with a decl
name: dup_task_struct	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 16
is it a loop? false
Building a regular RichBasicBlock 16
    has flow: false    has LSM: false
About to build basic block 17
is it a loop? false
Building a regular RichBasicBlock 17
GIMPLE CALL
GIMPLE CALL with a decl
name: task_active_pid_ns	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 18
is it a loop? false
Building a regular RichBasicBlock 18
    has flow: false    has LSM: false
About to build basic block 19
is it a loop? false
Building a regular RichBasicBlock 19
    has flow: false    has LSM: false
About to build basic block 20
is it a loop? false
Building a regular RichBasicBlock 20
    has flow: false    has LSM: false
About to build basic block 21
is it a loop? false
Building a regular RichBasicBlock 21
    has flow: false    has LSM: false
About to build basic block 22
is it a loop? false
Building a regular RichBasicBlock 22
GIMPLE CALL
GIMPLE CALL with a decl
name: ftrace_graph_init_task	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 23
is it a loop? false
Building a regular RichBasicBlock 23
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_creds	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 24
is it a loop? false
Building a regular RichBasicBlock 24
    has flow: false    has LSM: false
About to build basic block 25
is it a loop? false
Building a regular RichBasicBlock 25
GIMPLE CALL
GIMPLE CALL with a decl
name: capable	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 26
is it a loop? false
Building a regular RichBasicBlock 26
GIMPLE CALL
GIMPLE CALL with a decl
name: capable	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 27
is it a loop? false
Building a regular RichBasicBlock 27
    has flow: false    has LSM: false
About to build basic block 28
is it a loop? false
Building a regular RichBasicBlock 28
    has flow: false    has LSM: false
About to build basic block 29
is it a loop? false
Building a regular RichBasicBlock 29
    has flow: false    has LSM: false
About to build basic block 30
is it a loop? false
Building a regular RichBasicBlock 30
GIMPLE CALL
GIMPLE CALL with a decl
name: __delayacct_tsk_init	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 31
is it a loop? false
Building a regular RichBasicBlock 31
GIMPLE CALL
GIMPLE CALL with a decl
name: memset	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: memset	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: acct_clear_integrals	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: posix_cpu_timers_init	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: ktime_get	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: ktime_get_with_offset	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: cgroup_fork	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 32
is it a loop? false
Building a regular RichBasicBlock 32
GIMPLE CALL
GIMPLE CALL with a decl
name: __mpol_dup	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 33
is it a loop? false
Building a regular RichBasicBlock 33
    has flow: false    has LSM: false
About to build basic block 34
is it a loop? false
Building a regular RichBasicBlock 34
GIMPLE CALL
GIMPLE CALL with a decl
name: sched_fork	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 35
is it a loop? false
Building a regular RichBasicBlock 35
GIMPLE CALL
GIMPLE CALL with a decl
name: perf_event_init_task	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 36
is it a loop? false
Building a regular RichBasicBlock 36
GIMPLE CALL
GIMPLE CALL with a decl
name: audit_alloc	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 37
is it a loop? false
Building a regular RichBasicBlock 37
GIMPLE CALL
GIMPLE CALL with a decl
name: security_task_alloc	isLSM: true	isFlow: false
    has flow: false    has LSM: true
About to build basic block 38
is it a loop? false
Building a regular RichBasicBlock 38
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_semundo	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 39
is it a loop? false
Building a regular RichBasicBlock 39
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_files	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 40
is it a loop? false
Building a regular RichBasicBlock 40
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_fs	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 41
is it a loop? false
Building a regular RichBasicBlock 41
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_sighand	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 42
is it a loop? false
Building a regular RichBasicBlock 42
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_signal	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 43
is it a loop? false
Building a regular RichBasicBlock 43
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_mm	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 44
is it a loop? false
Building a regular RichBasicBlock 44
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_namespaces	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 45
is it a loop? false
Building a regular RichBasicBlock 45
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_io	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 46
is it a loop? false
Building a regular RichBasicBlock 46
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_thread_tls	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 47
is it a loop? false
Building a regular RichBasicBlock 47
    has flow: false    has LSM: false
About to build basic block 48
is it a loop? false
Building a regular RichBasicBlock 48
GIMPLE CALL
GIMPLE CALL with a decl
name: alloc_pid	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 49
is it a loop? false
Building a regular RichBasicBlock 49
    has flow: false    has LSM: false
About to build basic block 50
is it a loop? false
Building a regular RichBasicBlock 50
    has flow: false    has LSM: false
About to build basic block 51
is it a loop? false
Building a regular RichBasicBlock 51
    has flow: false    has LSM: false
About to build basic block 52
is it a loop? false
Building a regular RichBasicBlock 52
GIMPLE CALL
GIMPLE CALL with a decl
name: user_disable_single_step	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: clear_ti_thread_flag	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: clear_ti_thread_flag	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 53
is it a loop? false
Building a regular RichBasicBlock 53
    has flow: false    has LSM: false
About to build basic block 54
is it a loop? false
Building a regular RichBasicBlock 54
    has flow: false    has LSM: false
About to build basic block 55
is it a loop? false
Building a regular RichBasicBlock 55
    has flow: false    has LSM: false
About to build basic block 56
is it a loop? false
Building a regular RichBasicBlock 56
    has flow: false    has LSM: false
About to build basic block 57
is it a loop? false
Building a regular RichBasicBlock 57
    has flow: false    has LSM: false
About to build basic block 58
is it a loop? false
Building a regular RichBasicBlock 58
    has flow: false    has LSM: false
About to build basic block 59
is it a loop? false
Building a regular RichBasicBlock 59
    has flow: false    has LSM: false
About to build basic block 60
is it a loop? false
Building a regular RichBasicBlock 60
GIMPLE CALL
GIMPLE CALL with a decl
name: cgroup_threadgroup_change_begin.isra.34	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: cgroup_can_fork	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 61
is it a loop? false
Building a regular RichBasicBlock 61
GIMPLE CALL
GIMPLE CALL with a decl
name: _raw_write_lock_irq	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 62
is it a loop? false
Building a regular RichBasicBlock 62
    has flow: false    has LSM: false
About to build basic block 63
is it a loop? false
Building a regular RichBasicBlock 63
    has flow: false    has LSM: false
About to build basic block 64
is it a loop? false
Building a regular RichBasicBlock 64
GIMPLE CALL
GIMPLE CALL with a decl
name: klp_copy_process	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: _raw_spin_lock	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_seccomp	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: recalc_sigpending	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 65
is it a loop? false
Building a regular RichBasicBlock 65
    has flow: false    has LSM: false
About to build basic block 66
is it a loop? false
Building a regular RichBasicBlock 66
    has flow: false    has LSM: false
About to build basic block 67
is it a loop? false
Building a regular RichBasicBlock 67
    has flow: false    has LSM: false
About to build basic block 68
is it a loop? false
Building a regular RichBasicBlock 68
    has flow: false    has LSM: false
About to build basic block 69
is it a loop? false
Building a regular RichBasicBlock 69
    has flow: false    has LSM: false
About to build basic block 70
is it a loop? false
Building a regular RichBasicBlock 70
    has flow: false    has LSM: false
About to build basic block 71
is it a loop? false
Building a regular RichBasicBlock 71
GIMPLE CALL
GIMPLE CALL with a decl
name: ptrace_init_task	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 72
is it a loop? false
Building a regular RichBasicBlock 72
    has flow: false    has LSM: false
About to build basic block 73
is it a loop? false
Building a regular RichBasicBlock 73
    has flow: false    has LSM: false
About to build basic block 74
is it a loop? false
Building a regular RichBasicBlock 74
    has flow: false    has LSM: false
About to build basic block 75
is it a loop? false
Building a regular RichBasicBlock 75
    has flow: false    has LSM: false
About to build basic block 76
is it a loop? false
Building a regular RichBasicBlock 76
GIMPLE CALL
GIMPLE CALL with a decl
name: tty_kref_get	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: attach_pid	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: attach_pid	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 77
is it a loop? false
Building a regular RichBasicBlock 77
    has flow: false    has LSM: false
About to build basic block 78
is it a loop? false
Building a regular RichBasicBlock 78
GIMPLE CALL
GIMPLE CALL with a decl
name: attach_pid	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 79
is it a loop? false
Building a regular RichBasicBlock 79
GIMPLE CALL
GIMPLE CALL with a decl
name: queued_spin_unlock	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: syscall_tracepoint_update	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: arch_local_irq_enable	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: proc_fork_connector	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: cgroup_post_fork	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: cgroup_threadgroup_change_end.isra.35	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: perf_event_fork	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: trace_task_newtask	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: uprobe_copy_process	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 80
is it a loop? false
Building a regular RichBasicBlock 80
GIMPLE CALL
GIMPLE CALL with a decl
name: queued_spin_unlock	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: arch_local_irq_enable	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: cgroup_cancel_fork	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 81
is it a loop? false
Building a regular RichBasicBlock 81
GIMPLE CALL
GIMPLE CALL with a decl
name: cgroup_threadgroup_change_end.isra.35	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 82
is it a loop? false
Building a regular RichBasicBlock 82
GIMPLE CALL
GIMPLE CALL with a decl
name: free_pid	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 83
is it a loop? false
Building a regular RichBasicBlock 83
GIMPLE CALL
GIMPLE CALL with a decl
name: exit_thread	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 84
is it a loop? false
Building a regular RichBasicBlock 84
    has flow: false    has LSM: false
About to build basic block 85
is it a loop? false
Building a regular RichBasicBlock 85
GIMPLE CALL
GIMPLE CALL with a decl
name: exit_io_context	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 86
is it a loop? false
Building a regular RichBasicBlock 86
GIMPLE CALL
GIMPLE CALL with a decl
name: exit_task_namespaces	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 87
is it a loop? false
Building a regular RichBasicBlock 87
    has flow: false    has LSM: false
About to build basic block 88
is it a loop? false
Building a regular RichBasicBlock 88
GIMPLE CALL
GIMPLE CALL with a decl
name: mmput	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 89
is it a loop? false
Building a regular RichBasicBlock 89
    has flow: false    has LSM: false
About to build basic block 90
is it a loop? false
Building a regular RichBasicBlock 90
GIMPLE CALL
GIMPLE CALL with a decl
name: free_signal_struct	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 91
is it a loop? false
Building a regular RichBasicBlock 91
GIMPLE CALL
GIMPLE CALL with a decl
name: __cleanup_sighand	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 92
is it a loop? false
Building a regular RichBasicBlock 92
GIMPLE CALL
GIMPLE CALL with a decl
name: exit_fs	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 93
is it a loop? false
Building a regular RichBasicBlock 93
GIMPLE CALL
GIMPLE CALL with a decl
name: exit_files	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 94
is it a loop? false
Building a regular RichBasicBlock 94
GIMPLE CALL
GIMPLE CALL with a decl
name: exit_sem	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 95
is it a loop? false
Building a regular RichBasicBlock 95
GIMPLE CALL
GIMPLE CALL with a decl
name: security_task_free	isLSM: true	isFlow: false
    has flow: false    has LSM: true
About to build basic block 96
is it a loop? false
Building a regular RichBasicBlock 96
GIMPLE CALL
GIMPLE CALL with a decl
name: audit_free	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 97
is it a loop? false
Building a regular RichBasicBlock 97
GIMPLE CALL
GIMPLE CALL with a decl
name: perf_event_free_task	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 98
is it a loop? false
Building a regular RichBasicBlock 98
    has flow: false    has LSM: false
About to build basic block 99
is it a loop? false
Building a regular RichBasicBlock 99
GIMPLE CALL
GIMPLE CALL with a decl
name: __mpol_put	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 100
is it a loop? false
Building a regular RichBasicBlock 100
    has flow: false    has LSM: false
About to build basic block 101
is it a loop? false
Building a regular RichBasicBlock 101
GIMPLE CALL
GIMPLE CALL with a decl
name: kmem_cache_free	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 102
is it a loop? false
Building a regular RichBasicBlock 102
    has flow: false    has LSM: false
About to build basic block 103
is it a loop? false
Building a regular RichBasicBlock 103
GIMPLE CALL
GIMPLE CALL with a decl
name: exit_creds	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 104
is it a loop? false
Building a regular RichBasicBlock 104
GIMPLE CALL
GIMPLE CALL with a decl
name: put_task_stack	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: free_task	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 105
is it a loop? false
Building a regular RichBasicBlock 105
    has flow: false    has LSM: false
About to build basic block 106
is it a loop? false
Building a regular RichBasicBlock 106
    has flow: false    has LSM: false
About to build basic block 107
is it a loop? false
Building a regular RichBasicBlock 107
    has flow: false    has LSM: false
About to build basic block 108
is it a loop? false
Building a regular RichBasicBlock 108
    has flow: false    has LSM: false
About to build basic block 109
is it a loop? false
Building a regular RichBasicBlock 109
    has flow: false    has LSM: false
About to build basic block 110
is it a loop? false
Building a regular RichBasicBlock 110
    has flow: false    has LSM: false
About to build basic block 111
is it a loop? false
Building a regular RichBasicBlock 111
    has flow: false    has LSM: false
About to build basic block 112
is it a loop? true
Building a loop header pseudo-basic block
Building a regular RichBasicBlock 112
GIMPLE CALL
    has flow: false    has LSM: false
Loop added for basic_block 112
About to build basic block 113
is it a loop? true
Building a regular RichBasicBlock 113
    has flow: false    has LSM: false
About to build basic block 114
is it a loop? false
Building a regular RichBasicBlock 114
GIMPLE CALL
GIMPLE CALL with a decl
name: get_task_pid	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: pid_vnr	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 115
is it a loop? false
Building a regular RichBasicBlock 115
    has flow: false    has LSM: false
About to build basic block 116
is it a loop? false
Building a regular RichBasicBlock 116
    has flow: false    has LSM: false
About to build basic block 117
is it a loop? false
Building a regular RichBasicBlock 117
GIMPLE CALL
GIMPLE CALL with a decl
name: __init_waitqueue_head	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 118
is it a loop? false
Building a regular RichBasicBlock 118
GIMPLE CALL
GIMPLE CALL with a decl
name: wake_up_new_task	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 119
is it a loop? false
Building a regular RichBasicBlock 119
GIMPLE CALL
GIMPLE CALL with a decl
name: ptrace_event_pid	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 120
is it a loop? false
Building a regular RichBasicBlock 120
    has flow: false    has LSM: false
About to build basic block 121
is it a loop? false
Building a regular RichBasicBlock 121
    has flow: false    has LSM: false
About to build basic block 122
is it a loop? false
Building a regular RichBasicBlock 122
GIMPLE CALL
GIMPLE CALL with a decl
name: wait_for_vfork_done	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 123
is it a loop? false
Building a regular RichBasicBlock 123
GIMPLE CALL
GIMPLE CALL with a decl
name: task_active_pid_ns	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 124
is it a loop? false
Building a regular RichBasicBlock 124
GIMPLE CALL
GIMPLE CALL with a decl
name: pid_nr_ns	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 125
is it a loop? false
Building a regular RichBasicBlock 125
    has flow: false    has LSM: false
About to build basic block 126
is it a loop? false
Building a regular RichBasicBlock 126
GIMPLE CALL
GIMPLE CALL with a decl
name: ptrace_notify	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 127
is it a loop? false
Building a regular RichBasicBlock 127
GIMPLE CALL
GIMPLE CALL with a decl
name: put_pid	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 128
is it a loop? false
Building a regular RichBasicBlock 128
    has flow: false    has LSM: false
About to build basic block 129
is it a loop? false
Building a regular RichBasicBlock 129
    has flow: false    has LSM: false
About to build basic block 130
is it a loop? false
Building a regular RichBasicBlock 130
    has flow: false    has LSM: false
About to build basic block 131
is it a loop? false
Building a regular RichBasicBlock 131
    has flow: false    has LSM: false
About to build basic block 132
is it a loop? false
Building a regular RichBasicBlock 132
    has flow: false    has LSM: false
About to build basic block 1
is it a loop? false
There are 1 bbs with flow nodes (excluding those having LSM nodes)
Examining <8> (succs: 131 9 )
basic block 2 is a predecessor
got the corresponding RichBasicBlock
<2> (succs: 3 8 ) is white, visiting it first
basic block 0 is a predecessor
got the corresponding RichBasicBlock
<0> (succs: 2 ) is green (or gray), adding myself as a successor
0x3514010 is green
<2> (succs: 3 8 ) is green (or gray), adding myself as a successor
0x3559120 is green
basic block 7 is a predecessor
got the corresponding RichBasicBlock
<7> (succs: 8 ) is white, visiting it first
basic block 6 is a predecessor
got the corresponding RichBasicBlock
<6> (succs: 8 7 ) is white, visiting it first
basic block 3 is a predecessor
got the corresponding RichBasicBlock
<3> (succs: 6 4 ) is white, visiting it first
basic block 2 is a predecessor
got the corresponding RichBasicBlock
<2> (succs: 3 8 ) is green (or gray), adding myself as a successor
0x3559120 is green
<3> (succs: 6 4 ) is green (or gray), adding myself as a successor
0x351f780 is green
basic block 4 is a predecessor
got the corresponding RichBasicBlock
<4> (succs: 6 5 ) is white, visiting it first
basic block 3 is a predecessor
got the corresponding RichBasicBlock
<3> (succs: 6 4 ) is green (or gray), adding myself as a successor
0x351f780 is green
<4> (succs: 6 5 ) is green (or gray), adding myself as a successor
0x351f3d0 is green
basic block 5 is a predecessor
got the corresponding RichBasicBlock
<5> (succs: 6 ) is white, visiting it first
basic block 4 is a predecessor
got the corresponding RichBasicBlock
<4> (succs: 6 5 ) is green (or gray), adding myself as a successor
0x351f3d0 is green
<5> (succs: 6 ) is green (or gray), adding myself as a successor
0x351f4c0 is green
<6> (succs: 8 7 ) is green (or gray), adding myself as a successor
0x351f5a0 is green
<7> (succs: 8 ) is green (or gray), adding myself as a successor
0x35004a0 is green
basic block 6 is a predecessor
got the corresponding RichBasicBlock
<6> (succs: 8 7 ) is green (or gray), adding myself as a successor
0x351f5a0 is green
These are all the basic blocks:
<3> (succs: 6 4 )
<4> (succs: 6 5 )
<6> (succs: 8 7 )
<8> (succs: 131 9 )
<9> (succs: 131 10 )
<10> (succs: 131 11 )
<11> (succs: 131 12 )
<12> (succs: 13 14 )
<13> (succs: 131 14 )
<14> (succs: 16 15 )
<16> (succs: 131 17 )
<17> (succs: 131 15 )
<18> (succs: 20 19 )
<20> (succs: 22 21 )
<22> (succs: 24 23 )
<24> (succs: 25 23 )
<25> (succs: 26 23 )
<26> (succs: 104 23 )
<28> (succs: 103 29 )
<33> (succs: 100 )
<35> (succs: 98 36 )
<36> (succs: 97 37 )
<37> (succs: 96 38 )
<38> (succs: 95 39 )
<39> (succs: 94 40 )
<40> (succs: 93 41 )
<41> (succs: 92 42 )
<42> (succs: 91 43 )
<43> (succs: 89 44 )
<44> (succs: 87 45 )
<45> (succs: 86 46 )
<46> (succs: 84 47 )
<47> (succs: 48 50 )
<48> (succs: 49 50 )
<49> (succs: 83 )
<50> (succs: 51 52 )
<52> (succs: 53 54 )
<55> (succs: 60 )
<56> (succs: 57 58 )
<57> (succs: 59 )
<58> (succs: 59 )
<59> (succs: 60 )
<60> (succs: 81 61 )
<61> (succs: 62 63 )
<62> (succs: 64 )
<63> (succs: 64 )
<64> (succs: 80 65 )
<68> (succs: 69 79 )
<69> (succs: 71 70 )
<70> (succs: 71 )
<71> (succs: 72 77 )
<72> (succs: 73 76 )
<76> (succs: 78 )
<77> (succs: 78 )
<78> (succs: 79 )
<79> (succs: 106 )
<80> (succs: 81 )
<81> (succs: 82 83 )
<82> (succs: 83 )
<83> (succs: 84 )
<84> (succs: 85 86 )
<85> (succs: 86 )
<86> (succs: 87 )
<87> (succs: 88 89 )
<88> (succs: 89 )
<89> (succs: 90 91 )
<90> (succs: 91 )
<91> (succs: 92 )
<92> (succs: 93 )
<93> (succs: 94 )
<94> (succs: 95 )
<95> (succs: 96 )
<96> (succs: 97 )
<97> (succs: 98 )
<98> (succs: 99 100 )
<100> (succs: 101 102 )
<103> (succs: 104 )
<104> (succs: 105 )
<105> (succs: 106 )
<106> (succs: 107 128 )
<107> (succs: 132 108 )
<115> (succs: 116 )
<116> (succs: 117 118 )
<117> (succs: 118 )
<118> (succs: 119 120 )
<119> (succs: 120 )
<120> (succs: 122 121 )
<122> (succs: 123 121 )
<127> (succs: 130 )
<129> (succs: 130 )
<130> (succs: 1 )
<31> (succs: 32 34 )
<29> (succs: 30 31 )
<30> (succs: 31 )
<32> (succs: 33 34 )
<51> (succs: 52 )
<53> (succs: 54 )
<54> (succs: 55 56 )
<65> (succs: 66 67 )
<66> (succs: 67 )
<67> (succs: 80 68 )
<73> (succs: 74 75 )
<74> (succs: 75 )
<75> (succs: 76 )
<99> (succs: 100 )
<101> (succs: 102 )
<102> (succs: 103 )
<114> (succs: 115 116 )
<108> (succs: 114 )
<109> (succs: 111 110 )
<123> (succs: 124 125 )
<124> (succs: 125 )
<125> (succs: 126 121 )
<126> (succs: 127 )
<132> (succs: 114 109 )
(Loop header) <112> (succs: 113 110 )
<7> (succs: 8 )
<131> (succs: 129 )
<15> (succs: 105 18 )
<23> (succs: 27 28 )
<27> (succs: 104 )
<34> (succs: 98 35 )
<128> (succs: 129 )
<111> (succs: 112 )
<110> (succs: 114 )
<113> (succs: 112 )
<121> (succs: 127 )
<5> (succs: 6 )
<19> (succs: 20 )
<21> (succs: 22 )
<0> (succs: 2 )
<1> (succs: )
<2> (succs: 3 8 )
These are the basic blocks from the interesting subgraph:
[7] (succs in graph: [8] )
[8] (succs in graph: )
[0] (succs in graph: [2] )
[4] (succs in graph: [6] [5] )
[5] (succs in graph: [6] )
[6] (succs in graph: [7] [8] )
[3] (succs in graph: [6] [4] )
[2] (succs in graph: [8] [3] )

Starting the walk until <8> (succs: 131 9 )
Configuration created, _constraints size: 0
Reached <0> (succs: 2 )
Handled all statements
<2> (succs: 3 8 ) is a valid successor
extracted the constraint for successor <2> (succs: 3 8 )
Configuration copied
Copy of configuration initialized
Constraint added to configuration
Building the set of constraints
Set of constraints built
true
Yices says satisfiable
Reached <2> (succs: 3 8 )
Next statement : gimple_assign
clone_flags.118.10 is a variable
Trying to add a constraint about clone_flags.118.10
	lhs tree code: ssa_name
	rhs tree code: ssa_name
Constraint accepted
Normalized term clone_flags.9
clone_flags.9
Normalized term clone_flags.118.10
clone_flags.118.10
After normalization, new constraint: 
(= clone_flags.9 clone_flags.118.10)
Constraint about to be inserted, size: 0
Constraint inserted, size: 1
Next statement : gimple_assign
the statement has several rhs args
Next statement : gimple_cond
Handled all statements
<8> (succs: 131 9 ) is a valid successor
extracted the constraint for successor <8> (succs: 131 9 )
Configuration copied
Copy of configuration initialized
Trying to add a constraint about <ssa 0>.14
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Warning: trying to get a name for integer_cst
Normalized term 
0
Normalized term <ssa 0>.14
<ssa 0>.14
After normalization, new constraint: 
(/= <ssa 0>.14 0)
Constraint about to be inserted, size: 1
	(= clone_flags.9 clone_flags.118.10)
Constraint inserted, size: 2
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (/= <ssa 0>.14 0))
Yices says satisfiable
<3> (succs: 6 4 ) is a valid successor
extracted the constraint for successor <3> (succs: 6 4 )
Configuration copied
Copy of configuration initialized
Trying to add a constraint about <ssa 0>.14
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Normalized term 
0
Normalized term <ssa 0>.14
<ssa 0>.14
After normalization, new constraint: 
(= <ssa 0>.14 0)
Constraint about to be inserted, size: 1
	(= clone_flags.9 clone_flags.118.10)
Constraint inserted, size: 2
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0))
Yices says satisfiable
Reached <3> (succs: 6 4 )
Next statement : gimple_assign
the statement has several rhs args
Next statement : gimple_cond
Handled all statements
<6> (succs: 8 7 ) is a valid successor
extracted the constraint for successor <6> (succs: 8 7 )
Configuration copied
Copy of configuration initialized
Trying to add a constraint about <ssa 1>.15
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Normalized term 
0
Normalized term <ssa 1>.15
<ssa 1>.15
After normalization, new constraint: 
(/= <ssa 1>.15 0)
Constraint about to be inserted, size: 2
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
Constraint inserted, size: 3
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0) (/= <ssa 1>.15 0))
Yices says satisfiable
<4> (succs: 6 5 ) is a valid successor
extracted the constraint for successor <4> (succs: 6 5 )
Configuration copied
Copy of configuration initialized
Trying to add a constraint about <ssa 1>.15
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Normalized term 
0
Normalized term <ssa 1>.15
<ssa 1>.15
After normalization, new constraint: 
(= <ssa 1>.15 0)
Constraint about to be inserted, size: 2
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
Constraint inserted, size: 3
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0) (= <ssa 1>.15 0))
Yices says satisfiable
Reached <4> (succs: 6 5 )
Next statement : gimple_assign
the statement has several rhs args
Next statement : gimple_cond
Handled all statements
<6> (succs: 8 7 ) is a valid successor
extracted the constraint for successor <6> (succs: 8 7 )
Configuration copied
Copy of configuration initialized
Trying to add a constraint about <ssa 2>.16
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Warning: trying to get a name for integer_cst
Normalized term 
17
Normalized term <ssa 2>.16
<ssa 2>.16
After normalization, new constraint: 
(/= 17 <ssa 2>.16)
Constraint about to be inserted, size: 3
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
	(= <ssa 1>.15 0)
Constraint inserted, size: 4
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0) (= <ssa 1>.15 0) (/= 17 <ssa 2>.16))
Yices says satisfiable
<5> (succs: 6 ) is a valid successor
extracted the constraint for successor <5> (succs: 6 )
Configuration copied
Copy of configuration initialized
Trying to add a constraint about <ssa 2>.16
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Normalized term 
17
Normalized term <ssa 2>.16
<ssa 2>.16
After normalization, new constraint: 
(= 17 <ssa 2>.16)
Constraint about to be inserted, size: 3
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
	(= <ssa 1>.15 0)
Constraint inserted, size: 4
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0) (= <ssa 1>.15 0) (= 17 <ssa 2>.16))
Yices says satisfiable
Reached <5> (succs: 6 )
Handled all statements
<6> (succs: 8 7 ) is a valid successor
extracted the constraint for successor <6> (succs: 8 7 )
Configuration copied
Copy of configuration initialized
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0) (= <ssa 1>.15 0) (= 17 <ssa 2>.16))
Yices says satisfiable
Reached <6> (succs: 8 7 )
Trying to add a constraint about trace.18
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Warning: trying to get a name for integer_cst
Normalized term 
1
Normalized term trace.18
trace.18
After normalization, new constraint: 
(= 1 trace.18)
Constraint about to be inserted, size: 4
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
	(= <ssa 1>.15 0)
	(= 17 <ssa 2>.16)
Constraint inserted, size: 5
Trying to add a constraint about prephitmp.67
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Warning: trying to get a name for integer_cst
Normalized term 
16
Normalized term prephitmp.67
prephitmp.67
After normalization, new constraint: 
(= 16 prephitmp.67)
Constraint about to be inserted, size: 5
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
	(= <ssa 1>.15 0)
	(= 17 <ssa 2>.16)
	(= 1 trace.18)
Constraint inserted, size: 6
Next statement : gimple_asm
Next statement : gimple_assign
<ssa 3>.249 is a variable
Trying to add a constraint about <ssa 3>.249
	lhs tree code: ssa_name
	rhs tree code: component_ref
Bad nodes
Next statement : gimple_assign
the statement has several rhs args
Next statement : gimple_cond
Handled all statements
<7> (succs: 8 ) is a valid successor
extracted the constraint for successor <7> (succs: 8 )
Configuration copied
Copy of configuration initialized
Trying to add a constraint about <ssa 4>.253
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Warning: trying to get a name for integer_cst
Normalized term 
0
Normalized term <ssa 4>.253
<ssa 4>.253
After normalization, new constraint: 
(/= <ssa 4>.253 0)
Constraint about to be inserted, size: 6
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
	(= <ssa 1>.15 0)
	(= 17 <ssa 2>.16)
	(= 1 trace.18)
	(= 16 prephitmp.67)
Constraint inserted, size: 7
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0) (= <ssa 1>.15 0) (= 17 <ssa 2>.16) (= 1 trace.18)
     (= 16 prephitmp.67) (/= <ssa 4>.253 0))
Yices says satisfiable
<8> (succs: 131 9 ) is a valid successor
extracted the constraint for successor <8> (succs: 131 9 )
Configuration copied
Copy of configuration initialized
Trying to add a constraint about <ssa 4>.253
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Normalized term 
0
Normalized term <ssa 4>.253
<ssa 4>.253
After normalization, new constraint: 
(= <ssa 4>.253 0)
Constraint about to be inserted, size: 6
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
	(= <ssa 1>.15 0)
	(= 17 <ssa 2>.16)
	(= 1 trace.18)
	(= 16 prephitmp.67)
Constraint inserted, size: 7
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0) (= <ssa 1>.15 0) (= 17 <ssa 2>.16) (= 1 trace.18)
     (= 16 prephitmp.67) (= <ssa 4>.253 0))
Yices says satisfiable
Reached <8> (succs: 131 9 )
Found a path
	[<0> (succs: 2 ), <2> (succs: 3 8 ), <3> (succs: 6 4 ), <4> (succs: 6 5 ), <5> (succs: 6 ), <6> (succs: 8 7 ), <8> (succs: 131 9 )]
Reached <7> (succs: 8 )
Handled all statements
<8> (succs: 131 9 ) is a valid successor
extracted the constraint for successor <8> (succs: 131 9 )
Configuration copied
Copy of configuration initialized
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0) (= <ssa 1>.15 0) (= 17 <ssa 2>.16) (= 1 trace.18)
     (= 16 prephitmp.67) (/= <ssa 4>.253 0))
Yices says satisfiable
Reached <8> (succs: 131 9 )
Found a path
	[<0> (succs: 2 ), <2> (succs: 3 8 ), <3> (succs: 6 4 ), <4> (succs: 6 5 ), <5> (succs: 6 ), <6> (succs: 8 7 ), <7> (succs: 8 ), <8> (succs: 131 9 )]
Reached <6> (succs: 8 7 )
Trying to add a constraint about trace.18
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Warning: trying to get a name for integer_cst
Normalized term 
3
Normalized term trace.18
trace.18
After normalization, new constraint: 
(= trace.18 3)
Constraint about to be inserted, size: 4
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
	(= <ssa 1>.15 0)
	(/= 17 <ssa 2>.16)
Constraint inserted, size: 5
Trying to add a constraint about prephitmp.67
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Warning: trying to get a name for integer_cst
Normalized term 
64
Normalized term prephitmp.67
prephitmp.67
After normalization, new constraint: 
(= prephitmp.67 64)
Constraint about to be inserted, size: 5
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
	(= <ssa 1>.15 0)
	(/= 17 <ssa 2>.16)
	(= trace.18 3)
Constraint inserted, size: 6
Next statement : gimple_asm
Next statement : gimple_assign
<ssa 3>.249 is a variable
Trying to add a constraint about <ssa 3>.249
	lhs tree code: ssa_name
	rhs tree code: component_ref
Bad nodes
Next statement : gimple_assign
the statement has several rhs args
Next statement : gimple_cond
Handled all statements
<7> (succs: 8 ) is a valid successor
extracted the constraint for successor <7> (succs: 8 )
Configuration copied
Copy of configuration initialized
Trying to add a constraint about <ssa 4>.253
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Normalized term 
0
Normalized term <ssa 4>.253
<ssa 4>.253
After normalization, new constraint: 
(/= <ssa 4>.253 0)
Constraint about to be inserted, size: 6
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
	(= <ssa 1>.15 0)
	(/= 17 <ssa 2>.16)
	(= trace.18 3)
	(= prephitmp.67 64)
Constraint inserted, size: 7
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0) (= <ssa 1>.15 0) (/= 17 <ssa 2>.16) (/= <ssa 4>.253 0)
     (= trace.18 3) (= prephitmp.67 64))
Yices says satisfiable
<8> (succs: 131 9 ) is a valid successor
extracted the constraint for successor <8> (succs: 131 9 )
Configuration copied
Copy of configuration initialized
Trying to add a constraint about <ssa 4>.253
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Normalized term 
0
Normalized term <ssa 4>.253
<ssa 4>.253
After normalization, new constraint: 
(= <ssa 4>.253 0)
Constraint about to be inserted, size: 6
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
	(= <ssa 1>.15 0)
	(/= 17 <ssa 2>.16)
	(= trace.18 3)
	(= prephitmp.67 64)
Constraint inserted, size: 7
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0) (= <ssa 1>.15 0) (/= 17 <ssa 2>.16) (= <ssa 4>.253 0)
     (= trace.18 3) (= prephitmp.67 64))
Yices says satisfiable
Reached <8> (succs: 131 9 )
Found a path
	[<0> (succs: 2 ), <2> (succs: 3 8 ), <3> (succs: 6 4 ), <4> (succs: 6 5 ), <6> (succs: 8 7 ), <8> (succs: 131 9 )]
Reached <7> (succs: 8 )
Handled all statements
<8> (succs: 131 9 ) is a valid successor
extracted the constraint for successor <8> (succs: 131 9 )
Configuration copied
Copy of configuration initialized
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0) (= <ssa 1>.15 0) (/= 17 <ssa 2>.16) (/= <ssa 4>.253 0)
     (= trace.18 3) (= prephitmp.67 64))
Yices says satisfiable
Reached <8> (succs: 131 9 )
Found a path
	[<0> (succs: 2 ), <2> (succs: 3 8 ), <3> (succs: 6 4 ), <4> (succs: 6 5 ), <6> (succs: 8 7 ), <7> (succs: 8 ), <8> (succs: 131 9 )]
Reached <6> (succs: 8 7 )
Trying to add a constraint about trace.18
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Warning: trying to get a name for integer_cst
Normalized term 
2
Normalized term trace.18
trace.18
After normalization, new constraint: 
(= trace.18 2)
Constraint about to be inserted, size: 3
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
	(/= <ssa 1>.15 0)
Constraint inserted, size: 4
Trying to add a constraint about prephitmp.67
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Warning: trying to get a name for integer_cst
Normalized term 
32
Normalized term prephitmp.67
prephitmp.67
After normalization, new constraint: 
(= prephitmp.67 32)
Constraint about to be inserted, size: 4
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
	(/= <ssa 1>.15 0)
	(= trace.18 2)
Constraint inserted, size: 5
Next statement : gimple_asm
Next statement : gimple_assign
<ssa 3>.249 is a variable
Trying to add a constraint about <ssa 3>.249
	lhs tree code: ssa_name
	rhs tree code: component_ref
Bad nodes
Next statement : gimple_assign
the statement has several rhs args
Next statement : gimple_cond
Handled all statements
<7> (succs: 8 ) is a valid successor
extracted the constraint for successor <7> (succs: 8 )
Configuration copied
Copy of configuration initialized
Trying to add a constraint about <ssa 4>.253
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Normalized term 
0
Normalized term <ssa 4>.253
<ssa 4>.253
After normalization, new constraint: 
(/= <ssa 4>.253 0)
Constraint about to be inserted, size: 5
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
	(/= <ssa 1>.15 0)
	(= trace.18 2)
	(= prephitmp.67 32)
Constraint inserted, size: 6
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0) (/= <ssa 1>.15 0) (/= <ssa 4>.253 0) (= trace.18 2)
     (= prephitmp.67 32))
Yices says satisfiable
<8> (succs: 131 9 ) is a valid successor
extracted the constraint for successor <8> (succs: 131 9 )
Configuration copied
Copy of configuration initialized
Trying to add a constraint about <ssa 4>.253
	lhs tree code: ssa_name
	rhs tree code: integer_cst
Constraint accepted
Normalized term 
0
Normalized term <ssa 4>.253
<ssa 4>.253
After normalization, new constraint: 
(= <ssa 4>.253 0)
Constraint about to be inserted, size: 5
	(= clone_flags.9 clone_flags.118.10)
	(= <ssa 0>.14 0)
	(/= <ssa 1>.15 0)
	(= trace.18 2)
	(= prephitmp.67 32)
Constraint inserted, size: 6
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0) (/= <ssa 1>.15 0) (= <ssa 4>.253 0) (= trace.18 2)
     (= prephitmp.67 32))
Yices says satisfiable
Reached <8> (succs: 131 9 )
Found a path
	[<0> (succs: 2 ), <2> (succs: 3 8 ), <3> (succs: 6 4 ), <6> (succs: 8 7 ), <8> (succs: 131 9 )]
Reached <7> (succs: 8 )
Handled all statements
<8> (succs: 131 9 ) is a valid successor
extracted the constraint for successor <8> (succs: 131 9 )
Configuration copied
Copy of configuration initialized
Constraint added to configuration
Building the set of constraints
Set of constraints built
(and (= clone_flags.9 clone_flags.118.10) (= <ssa 0>.14 0) (/= <ssa 1>.15 0) (/= <ssa 4>.253 0) (= trace.18 2)
     (= prephitmp.67 32))
Yices says satisfiable
Reached <8> (succs: 131 9 )
Found a path
	[<0> (succs: 2 ), <2> (succs: 3 8 ), <3> (succs: 6 4 ), <6> (succs: 8 7 ), <7> (succs: 8 ), <8> (succs: 131 9 )]
Reached <8> (succs: 131 9 )
Found a path
	[<0> (succs: 2 ), <2> (succs: 3 8 ), <8> (succs: 131 9 )]
----------------------
Result of the analysis
paths found: 7
paths rejected: 0
----------------------

