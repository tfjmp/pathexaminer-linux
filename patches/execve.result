fs/exec.c:1640:36: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) int do_execveat(int fd, struct filename *filename,
                                    ^
fs/exec.c:1631:36: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) int do_execve(struct filename *filename,
                                    ^
fs/exec.c:1487:43: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) static int do_execveat_common(int fd, struct filename *filename,
                                           ^
fs/exec.c:1461:43: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) static int exec_binprm(struct linux_binprm *bprm)
                                           ^
fs/exec.c:1408:36: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) int search_binary_handler(struct linux_binprm *bprm)
                                    ^
fs/exec.c:1342:36: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) int prepare_binprm(struct linux_binprm *bprm)
                                    ^
fs/exec.c:1223:37: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) void install_exec_creds(struct linux_binprm *bprm)
                                     ^
Building the rich basic blocks
About to build basic block 0
is it a loop? false
Building a regular RichBasicBlock 0
About to build basic block 2
is it a loop? false
Building a regular RichBasicBlock 2
GIMPLE CALL
GIMPLE CALL with a decl
name: getname	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 3
is it a loop? false
Building a regular RichBasicBlock 3
    has flow: false    has LSM: false
About to build basic block 4
is it a loop? false
Building a regular RichBasicBlock 4
    has flow: false    has LSM: false
About to build basic block 5
is it a loop? false
Building a regular RichBasicBlock 5
    has flow: false    has LSM: false
About to build basic block 6
is it a loop? false
Building a regular RichBasicBlock 6
GIMPLE CALL
GIMPLE CALL with a decl
name: unshare_files	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 7
is it a loop? false
Building a regular RichBasicBlock 7
    has flow: false    has LSM: false
About to build basic block 8
is it a loop? false
Building a regular RichBasicBlock 8
GIMPLE CALL
GIMPLE CALL with a decl
name: kmem_cache_alloc_trace	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 9
is it a loop? false
Building a regular RichBasicBlock 9
GIMPLE CALL
GIMPLE CALL with a decl
name: prepare_bprm_creds	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 10
is it a loop? false
Building a regular RichBasicBlock 10
GIMPLE CALL
GIMPLE CALL with a decl
name: check_unsafe_exec.isra.21	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: do_open_execat	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 11
is it a loop? false
Building a regular RichBasicBlock 11
    has flow: false    has LSM: false
About to build basic block 12
is it a loop? false
Building a regular RichBasicBlock 12
GIMPLE CALL
GIMPLE CALL with a decl
name: sched_exec	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: bprm_mm_init	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 13
is it a loop? false
Building a regular RichBasicBlock 13
GIMPLE CALL
GIMPLE CALL with a decl
name: count.isra.25.constprop.43	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 14
is it a loop? false
Building a regular RichBasicBlock 14
GIMPLE CALL
GIMPLE CALL with a decl
name: count.isra.25.constprop.43	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 15
is it a loop? false
Building a regular RichBasicBlock 15
GIMPLE CALL
GIMPLE CALL with a decl
name: bprm_fill_uid	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: security_bprm_set_creds	isLSM: true	isFlow: false
    has flow: false    has LSM: true
About to build basic block 16
is it a loop? false
Building a regular RichBasicBlock 16
GIMPLE CALL
GIMPLE CALL with a decl
name: memset	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: kernel_read	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 17
is it a loop? false
Building a regular RichBasicBlock 17
    has flow: false    has LSM: false
About to build basic block 18
is it a loop? false
Building a regular RichBasicBlock 18
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_strings_kernel	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 19
is it a loop? false
Building a regular RichBasicBlock 19
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_strings.isra.27	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 20
is it a loop? false
Building a regular RichBasicBlock 20
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_strings.isra.27	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 21
is it a loop? false
Building a regular RichBasicBlock 21
GIMPLE CALL
GIMPLE CALL with a decl
name: task_active_pid_ns	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: __task_pid_nr_ns	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 22
is it a loop? false
Building a regular RichBasicBlock 22
GIMPLE CALL
GIMPLE CALL with a decl
name: security_bprm_check	isLSM: true	isFlow: false
    has flow: false    has LSM: true
About to build basic block 23
is it a loop? false
Building a regular RichBasicBlock 23
    has flow: false    has LSM: false
About to build basic block 24
is it a loop? true
Building a loop header pseudo-basic block
Building a regular RichBasicBlock 24
GIMPLE CALL
GIMPLE CALL with a decl
name: _raw_read_lock	isLSM: false	isFlow: false
    has flow: false    has LSM: false
Loop added for basic_block 24
About to build basic block 25
is it a loop? true
Building a regular RichBasicBlock 25
    has flow: false    has LSM: false
About to build basic block 26
is it a loop? true
Building a loop header pseudo-basic block
Building a regular RichBasicBlock 26
GIMPLE CALL
GIMPLE CALL with a decl
name: try_module_get	isLSM: false	isFlow: false
    has flow: false    has LSM: false
Loop added for basic_block 26
About to build basic block 27
is it a loop? true
Building a regular RichBasicBlock 27
GIMPLE CALL
GIMPLE CALL with a decl
name: __raw_read_unlock.constprop.42	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL
GIMPLE CALL with a decl
name: _raw_read_lock	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: module_put	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 28
is it a loop? true
Building a regular RichBasicBlock 28
    has flow: false    has LSM: false
About to build basic block 29
is it a loop? false
Building a regular RichBasicBlock 29
GIMPLE CALL
GIMPLE CALL with a decl
name: __raw_read_unlock.constprop.42	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: force_sigsegv	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 30
is it a loop? true
Building a regular RichBasicBlock 30
    has flow: false    has LSM: false
About to build basic block 31
is it a loop? true
Building a regular RichBasicBlock 31
    has flow: false    has LSM: false
About to build basic block 32
is it a loop? false
Building a regular RichBasicBlock 32
GIMPLE CALL
GIMPLE CALL with a decl
name: __raw_read_unlock.constprop.42	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 33
is it a loop? true
Building a regular RichBasicBlock 33
    has flow: false    has LSM: false
About to build basic block 34
is it a loop? true
Building a regular RichBasicBlock 34
    has flow: false    has LSM: false
About to build basic block 35
is it a loop? true
Building a regular RichBasicBlock 35
GIMPLE CALL
GIMPLE CALL with a decl
name: __raw_read_unlock.constprop.42	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 36
is it a loop? true
Building a regular RichBasicBlock 36
    has flow: false    has LSM: false
About to build basic block 37
is it a loop? true
Building a regular RichBasicBlock 37
    has flow: false    has LSM: false
About to build basic block 38
is it a loop? true
Building a regular RichBasicBlock 38
    has flow: false    has LSM: false
About to build basic block 39
is it a loop? true
Building a regular RichBasicBlock 39
    has flow: false    has LSM: false
About to build basic block 40
is it a loop? true
Building a regular RichBasicBlock 40
GIMPLE CALL
GIMPLE CALL with a decl
name: __request_module	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 41
is it a loop? true
Building a regular RichBasicBlock 41
    has flow: false    has LSM: false
About to build basic block 42
is it a loop? false
Building a regular RichBasicBlock 42
    has flow: false    has LSM: false
About to build basic block 43
is it a loop? false
Building a regular RichBasicBlock 43
GIMPLE CALL
GIMPLE CALL with a decl
name: kayrebt_FlowNodeMarker	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: audit_bprm	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: trace_sched_process_exec	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: ptrace_event.constprop.37	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: proc_exec_connector	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: acct_update_integrals	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: free_bprm	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: kfree	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: putname	isLSM: false	isFlow: true
    has flow: true    has LSM: false
About to build basic block 44
is it a loop? false
Building a regular RichBasicBlock 44
    has flow: false    has LSM: false
About to build basic block 45
is it a loop? false
Building a regular RichBasicBlock 45
GIMPLE CALL
GIMPLE CALL with a decl
name: put_files_struct	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 46
is it a loop? false
Building a regular RichBasicBlock 46
    has flow: false    has LSM: false
About to build basic block 47
is it a loop? false
Building a regular RichBasicBlock 47
GIMPLE CALL
GIMPLE CALL with a decl
name: acct_arg_size.isra.16	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: mmput	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 48
is it a loop? false
Building a regular RichBasicBlock 48
    has flow: false    has LSM: false
About to build basic block 49
is it a loop? false
Building a regular RichBasicBlock 49
GIMPLE CALL
GIMPLE CALL with a decl
name: free_bprm	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: kfree	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 50
is it a loop? false
Building a regular RichBasicBlock 50
    has flow: false    has LSM: false
About to build basic block 51
is it a loop? false
Building a regular RichBasicBlock 51
GIMPLE CALL
GIMPLE CALL with a decl
name: reset_files_struct	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 52
is it a loop? false
Building a regular RichBasicBlock 52
GIMPLE CALL
GIMPLE CALL with a decl
name: putname	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 53
is it a loop? false
Building a regular RichBasicBlock 53
    has flow: false    has LSM: false
About to build basic block 54
is it a loop? false
Building a regular RichBasicBlock 54
    has flow: false    has LSM: false
About to build basic block 55
is it a loop? false
Building a regular RichBasicBlock 55
    has flow: false    has LSM: false
About to build basic block 1
is it a loop? false
There are 1 bbs with flow nodes (excluding those having LSM nodes)
Examining <43> (succs: 45 44 )
basic block 42 is a predecessor
got the corresponding RichBasicBlock
<42> (succs: 43 55 ) is white, visiting it first
basic block 39 is a predecessor
got the corresponding RichBasicBlock
<39> (succs: 42 40 ) is white, visiting it first
basic block 38 is a predecessor
got the corresponding RichBasicBlock
<38> (succs: 39 40 ) is white, visiting it first
basic block 37 is a predecessor
got the corresponding RichBasicBlock
<37> (succs: 38 40 ) is white, visiting it first
basic block 36 is a predecessor
got the corresponding RichBasicBlock
<36> (succs: 37 40 ) is white, visiting it first
basic block 35 is a predecessor
got the corresponding RichBasicBlock
<35> (succs: 36 42 ) is white, visiting it first
basic block 33 is a predecessor
got the corresponding RichBasicBlock
<33> (succs: 34 35 ) is white, visiting it first
basic block 26 is a predecessor
got the corresponding RichBasicBlock
(Loop header) <26> (succs: 33 27 ) is white, visiting it first
basic block 34 is a predecessor
Stuck in a loop, abandoning this path
basic block 25 is a predecessor
got the corresponding RichBasicBlock
<25> (succs: 26 ) is white, visiting it first
basic block 24 is a predecessor
got the corresponding RichBasicBlock
(Loop header) <24> (succs: 25 35 ) is white, visiting it first
basic block 23 is a predecessor
got the corresponding RichBasicBlock
<23> (succs: 24 ) is white, visiting it first
basic block 22 is a predecessor
got the corresponding RichBasicBlock
0x15962a0 is red
0x15963d0 is red
basic block 41 is a predecessor
Stuck in a loop, abandoning this path
0x15964b0 is red
0x15965e0 is red
0x15966c0 is red
basic block 31 is a predecessor
got the corresponding RichBasicBlock
<31> (succs: 32 33 ) is white, visiting it first
basic block 30 is a predecessor
got the corresponding RichBasicBlock
<30> (succs: 32 31 ) is white, visiting it first
basic block 28 is a predecessor
got the corresponding RichBasicBlock
<28> (succs: 29 30 ) is white, visiting it first
basic block 27 is a predecessor
got the corresponding RichBasicBlock
<27> (succs: 28 32 ) is white, visiting it first
basic block 26 is a predecessor
got the corresponding RichBasicBlock
0x15966c0 is red
0x15967f0 is red
0x1596920 is red
0x1596b30 is red
0x1596c60 is red
0x1408a10 is red
basic block 24 is a predecessor
got the corresponding RichBasicBlock
0x15964b0 is red
0x1408c20 is red
0x1408d50 is red
0x1408e80 is red
0x1408fb0 is red
0x14090e0 is red
basic block 22 is a predecessor
got the corresponding RichBasicBlock
0x15962a0 is red
basic block 40 is a predecessor
got the corresponding RichBasicBlock
<40> (succs: 42 41 ) is white, visiting it first
basic block 37 is a predecessor
got the corresponding RichBasicBlock
0x1408e80 is red
basic block 36 is a predecessor
got the corresponding RichBasicBlock
0x1408d50 is red
basic block 39 is a predecessor
got the corresponding RichBasicBlock
0x14090e0 is red
basic block 38 is a predecessor
got the corresponding RichBasicBlock
0x1408fb0 is red
0x1409210 is red
basic block 32 is a predecessor
got the corresponding RichBasicBlock
<32> (succs: 42 ) is white, visiting it first
basic block 27 is a predecessor
got the corresponding RichBasicBlock
0x15967f0 is red
basic block 31 is a predecessor
got the corresponding RichBasicBlock
0x1596c60 is red
basic block 30 is a predecessor
got the corresponding RichBasicBlock
0x1596b30 is red
0x1408930 is red
basic block 35 is a predecessor
got the corresponding RichBasicBlock
0x1408c20 is red
0x1409420 is red
These are all the basic blocks:
<54> (succs: 55 )
<55> (succs: 46 )
(Loop header) <24> (succs: 25 35 )
<7> (succs: 52 )
<11> (succs: 48 )
<23> (succs: 24 )
<25> (succs: 26 )
<34> (succs: 26 )
<41> (succs: 24 )
<44> (succs: 53 )
<3> (succs: 53 )
<4> (succs: 5 6 )
<5> (succs: 52 6 )
<6> (succs: 7 8 )
<9> (succs: 49 10 )
<10> (succs: 11 12 )
<12> (succs: 48 13 )
<13> (succs: 46 14 )
<14> (succs: 46 15 )
<15> (succs: 17 16 )
<16> (succs: 17 )
<17> (succs: 46 18 )
<18> (succs: 46 19 )
<19> (succs: 46 20 )
<20> (succs: 46 21 )
<21> (succs: 54 22 )
<22> (succs: 42 23 )
(Loop header) <26> (succs: 33 27 )
<27> (succs: 28 32 )
<28> (succs: 29 30 )
<29> (succs: 54 )
<30> (succs: 32 31 )
<31> (succs: 32 33 )
<32> (succs: 42 )
<33> (succs: 34 35 )
<35> (succs: 36 42 )
<36> (succs: 37 40 )
<37> (succs: 38 40 )
<38> (succs: 39 40 )
<39> (succs: 42 40 )
<40> (succs: 42 41 )
<42> (succs: 43 55 )
<43> (succs: 45 44 )
<45> (succs: 53 )
<46> (succs: 47 48 )
<47> (succs: 48 )
<48> (succs: 49 )
<49> (succs: 50 )
<50> (succs: 51 52 )
<51> (succs: 52 )
<52> (succs: 53 )
<53> (succs: 1 )
<8> (succs: 50 9 )
<0> (succs: 2 )
<1> (succs: )
<2> (succs: 3 4 )
These are the basic blocks from the interesting subgraph:

Starting the walk until <43> (succs: 45 44 )
Configuration created, _constraints size: 0
Reached <0> (succs: 2 )
Handled all statements
----------------------
Result of the analysis
paths found: 0
paths rejected: 1
----------------------

