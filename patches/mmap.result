mm/mmap.c:1576:46: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) unsigned long mmap_region(struct file *file, unsigned long addr,
                                              ^
mm/mmap.c:1429:44: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute((always_inline)) unsigned long vm_mmap_pgoff(struct file *file, unsigned long addr,
                                            ^
mm/mmap.c:1282:46: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) unsigned long do_mmap(struct file *file, unsigned long addr,
                                              ^
Building the rich basic blocks
About to build basic block 0
is it a loop? false
Building a regular RichBasicBlock 0
About to build basic block 2
is it a loop? false
Building a regular RichBasicBlock 2
    has flow: false    has LSM: false
About to build basic block 3
is it a loop? false
Building a regular RichBasicBlock 3
    has flow: false    has LSM: false
About to build basic block 4
is it a loop? false
Building a regular RichBasicBlock 4
    has flow: false    has LSM: false
About to build basic block 5
is it a loop? false
Building a regular RichBasicBlock 5
GIMPLE CALL
GIMPLE CALL with a decl
name: fget	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 6
is it a loop? false
Building a regular RichBasicBlock 6
    has flow: false    has LSM: false
About to build basic block 7
is it a loop? false
Building a regular RichBasicBlock 7
GIMPLE CALL
GIMPLE CALL with a decl
name: is_file_shm_hugepages	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 8
is it a loop? false
Building a regular RichBasicBlock 8
    has flow: false    has LSM: false
About to build basic block 9
is it a loop? false
Building a regular RichBasicBlock 9
    has flow: false    has LSM: false
About to build basic block 10
is it a loop? false
Building a regular RichBasicBlock 10
GIMPLE CALL
GIMPLE CALL with a decl
name: is_file_shm_hugepages	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 11
is it a loop? false
Building a regular RichBasicBlock 11
    has flow: false    has LSM: false
About to build basic block 12
is it a loop? false
Building a regular RichBasicBlock 12
    has flow: false    has LSM: false
About to build basic block 13
is it a loop? false
Building a regular RichBasicBlock 13
    has flow: false    has LSM: false
About to build basic block 14
is it a loop? false
Building a regular RichBasicBlock 14
GIMPLE CALL
GIMPLE CALL with a decl
name: size_to_hstate	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 15
is it a loop? false
Building a regular RichBasicBlock 15
    has flow: false    has LSM: false
About to build basic block 16
is it a loop? false
Building a regular RichBasicBlock 16
GIMPLE CALL
GIMPLE CALL with a decl
name: hugetlb_file_setup	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 17
is it a loop? false
Building a regular RichBasicBlock 17
    has flow: false    has LSM: false
About to build basic block 18
is it a loop? false
Building a regular RichBasicBlock 18
    has flow: false    has LSM: false
About to build basic block 19
is it a loop? false
Building a regular RichBasicBlock 19
    has flow: false    has LSM: false
About to build basic block 20
is it a loop? false
Building a regular RichBasicBlock 20
GIMPLE CALL
GIMPLE CALL with a decl
name: security_mmap_file	isLSM: true	isFlow: false
    has flow: false    has LSM: true
About to build basic block 21
is it a loop? false
Building a regular RichBasicBlock 21
GIMPLE CALL
GIMPLE CALL with a decl
name: down_write	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 22
is it a loop? false
Building a regular RichBasicBlock 22
    has flow: false    has LSM: false
About to build basic block 23
is it a loop? false
Building a regular RichBasicBlock 23
    has flow: false    has LSM: false
About to build basic block 24
is it a loop? false
Building a regular RichBasicBlock 24
    has flow: false    has LSM: false
About to build basic block 25
is it a loop? false
Building a regular RichBasicBlock 25
    has flow: false    has LSM: false
About to build basic block 26
is it a loop? false
Building a regular RichBasicBlock 26
GIMPLE CALL
GIMPLE CALL with a decl
name: path_noexec	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 27
is it a loop? false
Building a regular RichBasicBlock 27
    has flow: false    has LSM: false
About to build basic block 28
is it a loop? false
Building a regular RichBasicBlock 28
    has flow: false    has LSM: false
About to build basic block 29
is it a loop? false
Building a regular RichBasicBlock 29
    has flow: false    has LSM: false
About to build basic block 30
is it a loop? false
Building a regular RichBasicBlock 30
    has flow: false    has LSM: false
About to build basic block 31
is it a loop? false
Building a regular RichBasicBlock 31
    has flow: false    has LSM: false
About to build basic block 32
is it a loop? false
Building a regular RichBasicBlock 32
    has flow: false    has LSM: false
About to build basic block 33
is it a loop? false
Building a regular RichBasicBlock 33
    has flow: false    has LSM: false
About to build basic block 34
is it a loop? false
Building a regular RichBasicBlock 34
    has flow: false    has LSM: false
About to build basic block 35
is it a loop? false
Building a regular RichBasicBlock 35
GIMPLE CALL
GIMPLE CALL with a decl
name: get_unmapped_area	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 36
is it a loop? false
Building a regular RichBasicBlock 36
    has flow: false    has LSM: false
About to build basic block 37
is it a loop? false
Building a regular RichBasicBlock 37
    has flow: false    has LSM: false
About to build basic block 38
is it a loop? false
Building a regular RichBasicBlock 38
    has flow: false    has LSM: false
About to build basic block 39
is it a loop? false
Building a regular RichBasicBlock 39
GIMPLE CALL
GIMPLE CALL with a decl
name: can_do_mlock	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 40
is it a loop? false
Building a regular RichBasicBlock 40
    has flow: false    has LSM: false
About to build basic block 41
is it a loop? false
Building a regular RichBasicBlock 41
    has flow: false    has LSM: false
About to build basic block 42
is it a loop? false
Building a regular RichBasicBlock 42
    has flow: false    has LSM: false
About to build basic block 43
is it a loop? false
Building a regular RichBasicBlock 43
GIMPLE CALL
GIMPLE CALL with a decl
name: capable	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 44
is it a loop? false
Building a regular RichBasicBlock 44
    has flow: false    has LSM: false
About to build basic block 45
is it a loop? false
Building a regular RichBasicBlock 45
    has flow: false    has LSM: false
About to build basic block 46
is it a loop? false
Building a regular RichBasicBlock 46
    has flow: false    has LSM: false
About to build basic block 47
is it a loop? false
Building a regular RichBasicBlock 47
    has flow: false    has LSM: false
About to build basic block 48
is it a loop? false
Building a regular RichBasicBlock 48
    has flow: false    has LSM: false
About to build basic block 49
is it a loop? false
Building a regular RichBasicBlock 49
    has flow: false    has LSM: false
About to build basic block 50
is it a loop? false
Building a regular RichBasicBlock 50
    has flow: false    has LSM: false
About to build basic block 51
is it a loop? false
Building a regular RichBasicBlock 51
GIMPLE CALL
GIMPLE CALL with a decl
name: locks_verify_locked	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 52
is it a loop? false
Building a regular RichBasicBlock 52
    has flow: false    has LSM: false
About to build basic block 53
is it a loop? false
Building a regular RichBasicBlock 53
    has flow: false    has LSM: false
About to build basic block 54
is it a loop? false
Building a regular RichBasicBlock 54
    has flow: false    has LSM: false
About to build basic block 55
is it a loop? false
Building a regular RichBasicBlock 55
GIMPLE CALL
GIMPLE CALL with a decl
name: path_noexec	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 56
is it a loop? false
Building a regular RichBasicBlock 56
    has flow: false    has LSM: false
About to build basic block 57
is it a loop? false
Building a regular RichBasicBlock 57
    has flow: false    has LSM: false
About to build basic block 58
is it a loop? false
Building a regular RichBasicBlock 58
    has flow: false    has LSM: false
About to build basic block 59
is it a loop? false
Building a regular RichBasicBlock 59
    has flow: false    has LSM: false
About to build basic block 60
is it a loop? false
Building a regular RichBasicBlock 60
    has flow: false    has LSM: false
About to build basic block 61
is it a loop? false
Building a regular RichBasicBlock 61
    has flow: false    has LSM: false
About to build basic block 62
is it a loop? false
Building a regular RichBasicBlock 62
    has flow: false    has LSM: false
About to build basic block 63
is it a loop? false
Building a regular RichBasicBlock 63
    has flow: false    has LSM: false
About to build basic block 64
is it a loop? false
Building a regular RichBasicBlock 64
    has flow: false    has LSM: false
About to build basic block 65
is it a loop? false
Building a regular RichBasicBlock 65
    has flow: false    has LSM: false
About to build basic block 66
is it a loop? false
Building a regular RichBasicBlock 66
    has flow: false    has LSM: false
About to build basic block 67
is it a loop? false
Building a regular RichBasicBlock 67
    has flow: false    has LSM: false
About to build basic block 68
is it a loop? false
Building a regular RichBasicBlock 68
    has flow: false    has LSM: false
About to build basic block 69
is it a loop? false
Building a regular RichBasicBlock 69
GIMPLE CALL
GIMPLE CALL with a decl
name: is_file_hugepages	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 70
is it a loop? false
Building a regular RichBasicBlock 70
    has flow: false    has LSM: false
About to build basic block 71
is it a loop? false
Building a regular RichBasicBlock 71
GIMPLE CALL
GIMPLE CALL with a decl
name: may_expand_vm	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 72
is it a loop? false
Building a regular RichBasicBlock 72
GIMPLE CALL
GIMPLE CALL with a decl
name: count_vma_pages_range	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: may_expand_vm	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 73
is it a loop? true
Building a regular RichBasicBlock 73
GIMPLE CALL
GIMPLE CALL with a decl
name: do_munmap	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 74
is it a loop? true
Building a regular RichBasicBlock 74
    has flow: false    has LSM: false
About to build basic block 75
is it a loop? false
Building a regular RichBasicBlock 75
    has flow: false    has LSM: false
About to build basic block 76
is it a loop? true
Building a loop header pseudo-basic block
Building a regular RichBasicBlock 76
GIMPLE CALL
GIMPLE CALL with a decl
name: find_vma_links	isLSM: false	isFlow: false
    has flow: false    has LSM: false
Loop added for basic_block 76
About to build basic block 77
is it a loop? false
Building a regular RichBasicBlock 77
GIMPLE CALL
GIMPLE CALL with a decl
name: accountable_mapping	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 78
is it a loop? false
Building a regular RichBasicBlock 78
GIMPLE CALL
GIMPLE CALL with a decl
name: security_vm_enough_memory_mm	isLSM: true	isFlow: false
    has flow: false    has LSM: true
About to build basic block 79
is it a loop? false
Building a regular RichBasicBlock 79
    has flow: false    has LSM: false
About to build basic block 80
is it a loop? false
Building a regular RichBasicBlock 80
GIMPLE CALL
GIMPLE CALL with a decl
name: vma_merge	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 81
is it a loop? false
Building a regular RichBasicBlock 81
GIMPLE CALL
GIMPLE CALL with a decl
name: kayrebt_FlowNodeMarker	isLSM: false	isFlow: true
    has flow: true    has LSM: false
About to build basic block 82
is it a loop? false
Building a regular RichBasicBlock 82
GIMPLE CALL
GIMPLE CALL with a decl
name: kmem_cache_alloc	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 83
is it a loop? false
Building a regular RichBasicBlock 83
    has flow: false    has LSM: false
About to build basic block 84
is it a loop? false
Building a regular RichBasicBlock 84
    has flow: false    has LSM: false
About to build basic block 85
is it a loop? false
Building a regular RichBasicBlock 85
    has flow: false    has LSM: false
About to build basic block 86
is it a loop? false
Building a regular RichBasicBlock 86
GIMPLE CALL
GIMPLE CALL with a decl
name: deny_write_access	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 87
is it a loop? false
Building a regular RichBasicBlock 87
GIMPLE CALL
GIMPLE CALL with a decl
name: get_file	isLSM: false	isFlow: false
GIMPLE CALL
    has flow: false    has LSM: false
About to build basic block 88
is it a loop? false
Building a regular RichBasicBlock 88
GIMPLE CALL
GIMPLE CALL with a decl
name: mapping_map_writable	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 89
is it a loop? false
Building a regular RichBasicBlock 89
    has flow: false    has LSM: false
About to build basic block 90
is it a loop? false
Building a regular RichBasicBlock 90
    has flow: false    has LSM: false
About to build basic block 91
is it a loop? false
Building a regular RichBasicBlock 91
GIMPLE CALL
GIMPLE CALL with a decl
name: warn_slowpath_null	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 92
is it a loop? false
Building a regular RichBasicBlock 92
GIMPLE CALL
GIMPLE CALL with a decl
name: kayrebt_FlowNodeMarker	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: vma_link	isLSM: false	isFlow: true
    has flow: true    has LSM: false
About to build basic block 93
is it a loop? false
Building a regular RichBasicBlock 93
    has flow: false    has LSM: false
About to build basic block 94
is it a loop? false
Building a regular RichBasicBlock 94
GIMPLE CALL
GIMPLE CALL with a decl
name: shmem_zero_setup	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 95
is it a loop? false
Building a regular RichBasicBlock 95
GIMPLE CALL
GIMPLE CALL with a decl
name: mapping_unmap_writable	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 96
is it a loop? false
Building a regular RichBasicBlock 96
    has flow: false    has LSM: false
About to build basic block 97
is it a loop? false
Building a regular RichBasicBlock 97
GIMPLE CALL
GIMPLE CALL with a decl
name: allow_write_access	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 98
is it a loop? false
Building a regular RichBasicBlock 98
    has flow: false    has LSM: false
About to build basic block 99
is it a loop? false
Building a regular RichBasicBlock 99
GIMPLE CALL
GIMPLE CALL with a decl
name: perf_event_mmap	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: vm_stat_account	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 100
is it a loop? false
Building a regular RichBasicBlock 100
    has flow: false    has LSM: false
About to build basic block 101
is it a loop? false
Building a regular RichBasicBlock 101
    has flow: false    has LSM: false
About to build basic block 102
is it a loop? false
Building a regular RichBasicBlock 102
GIMPLE CALL
GIMPLE CALL with a decl
name: get_gate_vma	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 103
is it a loop? false
Building a regular RichBasicBlock 103
    has flow: false    has LSM: false
About to build basic block 104
is it a loop? false
Building a regular RichBasicBlock 104
    has flow: false    has LSM: false
About to build basic block 105
is it a loop? false
Building a regular RichBasicBlock 105
GIMPLE CALL
GIMPLE CALL with a decl
name: vma_set_page_prot	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 106
is it a loop? false
Building a regular RichBasicBlock 106
GIMPLE CALL
GIMPLE CALL with a decl
name: fput	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: unmap_region	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 107
is it a loop? false
Building a regular RichBasicBlock 107
GIMPLE CALL
GIMPLE CALL with a decl
name: mapping_unmap_writable	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 108
is it a loop? false
Building a regular RichBasicBlock 108
    has flow: false    has LSM: false
About to build basic block 109
is it a loop? false
Building a regular RichBasicBlock 109
GIMPLE CALL
GIMPLE CALL with a decl
name: allow_write_access	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 110
is it a loop? false
Building a regular RichBasicBlock 110
GIMPLE CALL
GIMPLE CALL with a decl
name: kmem_cache_free	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 111
is it a loop? false
Building a regular RichBasicBlock 111
    has flow: false    has LSM: false
About to build basic block 112
is it a loop? false
Building a regular RichBasicBlock 112
GIMPLE CALL
GIMPLE CALL with a decl
name: vm_unacct_memory	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 113
is it a loop? false
Building a regular RichBasicBlock 113
    has flow: false    has LSM: false
About to build basic block 114
is it a loop? false
Building a regular RichBasicBlock 114
    has flow: false    has LSM: false
About to build basic block 115
is it a loop? false
Building a regular RichBasicBlock 115
    has flow: false    has LSM: false
About to build basic block 116
is it a loop? false
Building a regular RichBasicBlock 116
    has flow: false    has LSM: false
About to build basic block 117
is it a loop? false
Building a regular RichBasicBlock 117
    has flow: false    has LSM: false
About to build basic block 118
is it a loop? false
Building a regular RichBasicBlock 118
    has flow: false    has LSM: false
About to build basic block 119
is it a loop? false
Building a regular RichBasicBlock 119
    has flow: false    has LSM: false
About to build basic block 120
is it a loop? false
Building a regular RichBasicBlock 120
    has flow: false    has LSM: false
About to build basic block 121
is it a loop? false
Building a regular RichBasicBlock 121
GIMPLE CALL
GIMPLE CALL with a decl
name: fput	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 122
is it a loop? false
Building a regular RichBasicBlock 122
    has flow: false    has LSM: false
About to build basic block 123
is it a loop? false
Building a regular RichBasicBlock 123
    has flow: false    has LSM: false
About to build basic block 124
is it a loop? false
Building a regular RichBasicBlock 124
GIMPLE CALL
GIMPLE CALL with a decl
name: __audit_mmap_fd	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 125
is it a loop? false
Building a regular RichBasicBlock 125
    has flow: false    has LSM: false
About to build basic block 126
is it a loop? false
Building a regular RichBasicBlock 126
    has flow: false    has LSM: false
About to build basic block 127
is it a loop? false
Building a regular RichBasicBlock 127
GIMPLE CALL
GIMPLE CALL with a decl
name: kayrebt_FlowNodeMarker	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: vma_link	isLSM: false	isFlow: true
    has flow: true    has LSM: false
About to build basic block 128
is it a loop? false
Building a regular RichBasicBlock 128
    has flow: false    has LSM: false
About to build basic block 129
is it a loop? false
Building a regular RichBasicBlock 129
GIMPLE CALL
GIMPLE CALL with a decl
name: up_write	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: __mm_populate	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 130
is it a loop? false
Building a regular RichBasicBlock 130
GIMPLE CALL
GIMPLE CALL with a decl
name: up_write	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 1
is it a loop? false
There are 3 bbs with flow nodes (excluding those having LSM nodes)
Examining <127> (succs: 98 )
basic block 93 is a predecessor
got the corresponding RichBasicBlock
<93> (succs: 94 127 ) is white, visiting it first
basic block 83 is a predecessor
got the corresponding RichBasicBlock
<83> (succs: 84 93 ) is white, visiting it first
basic block 82 is a predecessor
got the corresponding RichBasicBlock
<82> (succs: 111 83 ) is white, visiting it first
basic block 80 is a predecessor
got the corresponding RichBasicBlock
<80> (succs: 81 82 ) is white, visiting it first
basic block 77 is a predecessor
got the corresponding RichBasicBlock
<77> (succs: 78 80 ) is white, visiting it first
basic block 76 is a predecessor
got the corresponding RichBasicBlock
(Loop header) <76> (succs: 73 77 ) is white, visiting it first
basic block 75 is a predecessor
got the corresponding RichBasicBlock
<75> (succs: 76 ) is white, visiting it first
basic block 71 is a predecessor
got the corresponding RichBasicBlock
<71> (succs: 72 75 ) is white, visiting it first
basic block 65 is a predecessor
got the corresponding RichBasicBlock
<65> (succs: 66 71 ) is white, visiting it first
basic block 59 is a predecessor
got the corresponding RichBasicBlock
<59> (succs: 60 65 ) is white, visiting it first
basic block 58 is a predecessor
got the corresponding RichBasicBlock
<58> (succs: 130 59 ) is white, visiting it first
basic block 55 is a predecessor
got the corresponding RichBasicBlock
<55> (succs: 56 58 ) is white, visiting it first
basic block 54 is a predecessor
got the corresponding RichBasicBlock
<54> (succs: 48 55 ) is white, visiting it first
basic block 45 is a predecessor
got the corresponding RichBasicBlock
<45> (succs: 130 46 54 ) is white, visiting it first
basic block 41 is a predecessor
got the corresponding RichBasicBlock
<41> (succs: 45 61 ) is white, visiting it first
basic block 38 is a predecessor
got the corresponding RichBasicBlock
<38> (succs: 42 41 ) is white, visiting it first
basic block 37 is a predecessor
got the corresponding RichBasicBlock
<37> (succs: 39 38 ) is white, visiting it first
basic block 35 is a predecessor
got the corresponding RichBasicBlock
<35> (succs: 36 37 ) is white, visiting it first
basic block 34 is a predecessor
got the corresponding RichBasicBlock
<34> (succs: 130 35 ) is white, visiting it first
basic block 33 is a predecessor
got the corresponding RichBasicBlock
<33> (succs: 130 34 ) is white, visiting it first
basic block 32 is a predecessor
got the corresponding RichBasicBlock
<32> (succs: 130 33 ) is white, visiting it first
basic block 27 is a predecessor
got the corresponding RichBasicBlock
<27> (succs: 28 32 ) is white, visiting it first
basic block 22 is a predecessor
got the corresponding RichBasicBlock
<22> (succs: 23 27 ) is white, visiting it first
basic block 21 is a predecessor
got the corresponding RichBasicBlock
<21> (succs: 130 22 ) is white, visiting it first
basic block 20 is a predecessor
got the corresponding RichBasicBlock
0x15b69b0 is red
0x15b6ae0 is red
0x15b6c10 is red
basic block 23 is a predecessor
got the corresponding RichBasicBlock
<23> (succs: 24 27 ) is white, visiting it first
basic block 22 is a predecessor
got the corresponding RichBasicBlock
0x15b6c10 is red
0x15b6d40 is red
basic block 26 is a predecessor
got the corresponding RichBasicBlock
<26> (succs: 25 27 ) is white, visiting it first
basic block 24 is a predecessor
got the corresponding RichBasicBlock
<24> (succs: 25 26 ) is white, visiting it first
basic block 23 is a predecessor
got the corresponding RichBasicBlock
0x15b6d40 is red
0x15b6e70 is red
0x15b7080 is red
basic block 25 is a predecessor
got the corresponding RichBasicBlock
<25> (succs: 27 ) is white, visiting it first
basic block 24 is a predecessor
got the corresponding RichBasicBlock
0x15b6e70 is red
basic block 26 is a predecessor
got the corresponding RichBasicBlock
0x15b7080 is red
0x15b6fa0 is red
0x1570460 is red
basic block 31 is a predecessor
got the corresponding RichBasicBlock
<31> (succs: 32 ) is white, visiting it first
basic block 28 is a predecessor
got the corresponding RichBasicBlock
<28> (succs: 29 31 ) is white, visiting it first
basic block 27 is a predecessor
got the corresponding RichBasicBlock
0x1570460 is red
0x1570550 is red
basic block 29 is a predecessor
got the corresponding RichBasicBlock
<29> (succs: 30 31 ) is white, visiting it first
basic block 28 is a predecessor
got the corresponding RichBasicBlock
0x1570550 is red
0x1570680 is red
basic block 30 is a predecessor
got the corresponding RichBasicBlock
<30> (succs: 31 ) is white, visiting it first
basic block 29 is a predecessor
got the corresponding RichBasicBlock
0x1570680 is red
0x15707b0 is red
0x1570890 is red
0x1570970 is red
0x1570aa0 is red
0x1570bd0 is red
0x1570d00 is red
0x1570f10 is red
basic block 39 is a predecessor
got the corresponding RichBasicBlock
<39> (succs: 40 38 ) is white, visiting it first
basic block 37 is a predecessor
got the corresponding RichBasicBlock
0x1570f10 is red
0x1571170 is red
0x1571040 is red
basic block 42 is a predecessor
got the corresponding RichBasicBlock
<42> (succs: 43 41 ) is white, visiting it first
basic block 38 is a predecessor
got the corresponding RichBasicBlock
0x1571040 is red
0x156f600 is red
basic block 43 is a predecessor
got the corresponding RichBasicBlock
<43> (succs: 44 41 ) is white, visiting it first
basic block 42 is a predecessor
got the corresponding RichBasicBlock
0x156f600 is red
0x156f730 is red
0x156f4d0 is red
0x156f940 is red
basic block 52 is a predecessor
got the corresponding RichBasicBlock
<52> (succs: 53 54 ) is white, visiting it first
basic block 51 is a predecessor
got the corresponding RichBasicBlock
<51> (succs: 44 52 ) is white, visiting it first
basic block 50 is a predecessor
got the corresponding RichBasicBlock
<50> (succs: 48 51 ) is white, visiting it first
basic block 49 is a predecessor
got the corresponding RichBasicBlock
<49> (succs: 50 51 ) is white, visiting it first
basic block 47 is a predecessor
got the corresponding RichBasicBlock
<47> (succs: 48 49 ) is white, visiting it first
basic block 46 is a predecessor
got the corresponding RichBasicBlock
<46> (succs: 47 49 ) is white, visiting it first
basic block 45 is a predecessor
got the corresponding RichBasicBlock
0x156f940 is red
0x156fac0 is red
0x156fbf0 is red
basic block 46 is a predecessor
got the corresponding RichBasicBlock
0x156fac0 is red
0x156fe00 is red
0x156ff30 is red
basic block 49 is a predecessor
got the corresponding RichBasicBlock
0x156fe00 is red
0x1570060 is red
0x1570190 is red
basic block 53 is a predecessor
got the corresponding RichBasicBlock
<53> (succs: 54 ) is white, visiting it first
basic block 52 is a predecessor
got the corresponding RichBasicBlock
0x1570190 is red
0x15702c0 is red
0x15703a0 is red
0x15722d0 is red
basic block 57 is a predecessor
got the corresponding RichBasicBlock
<57> (succs: 58 ) is white, visiting it first
basic block 56 is a predecessor
got the corresponding RichBasicBlock
<56> (succs: 40 57 ) is white, visiting it first
basic block 55 is a predecessor
got the corresponding RichBasicBlock
0x15722d0 is red
0x1572400 is red
0x1572530 is red
0x1572610 is red
0x1572740 is red
basic block 63 is a predecessor
got the corresponding RichBasicBlock
<63> (succs: 65 ) is white, visiting it first
basic block 62 is a predecessor
got the corresponding RichBasicBlock
<62> (succs: 60 63 ) is white, visiting it first
basic block 61 is a predecessor
got the corresponding RichBasicBlock
<61> (succs: 130 62 64 ) is white, visiting it first
basic block 41 is a predecessor
got the corresponding RichBasicBlock
0x156f4d0 is red
0x1572950 is red
0x1572ad0 is red
0x1572c00 is red
basic block 64 is a predecessor
got the corresponding RichBasicBlock
<64> (succs: 65 ) is white, visiting it first
basic block 61 is a predecessor
got the corresponding RichBasicBlock
0x1572950 is red
0x1572ce0 is red
0x1572dc0 is red
basic block 68 is a predecessor
got the corresponding RichBasicBlock
<68> (succs: 69 71 ) is white, visiting it first
basic block 66 is a predecessor
got the corresponding RichBasicBlock
<66> (succs: 67 68 ) is white, visiting it first
basic block 65 is a predecessor
got the corresponding RichBasicBlock
0x1572dc0 is red
0x1572ef0 is red
basic block 67 is a predecessor
got the corresponding RichBasicBlock
<67> (succs: 68 ) is white, visiting it first
basic block 66 is a predecessor
got the corresponding RichBasicBlock
0x1572ef0 is red
0x1573020 is red
0x1573100 is red
basic block 69 is a predecessor
got the corresponding RichBasicBlock
<69> (succs: 70 71 ) is white, visiting it first
basic block 68 is a predecessor
got the corresponding RichBasicBlock
0x1573100 is red
0x1573230 is red
basic block 70 is a predecessor
got the corresponding RichBasicBlock
<70> (succs: 71 ) is white, visiting it first
basic block 69 is a predecessor
got the corresponding RichBasicBlock
0x1573230 is red
0x1573360 is red
0x1573440 is red
basic block 72 is a predecessor
got the corresponding RichBasicBlock
<72> (succs: 128 75 ) is white, visiting it first
basic block 71 is a predecessor
got the corresponding RichBasicBlock
0x1573440 is red
0x1573570 is red
0x1678360 is red
basic block 74 is a predecessor
Stuck in a loop, abandoning this path
0x1678440 is red
0x1678570 is red
basic block 79 is a predecessor
got the corresponding RichBasicBlock
<79> (succs: 80 ) is white, visiting it first
basic block 78 is a predecessor
got the corresponding RichBasicBlock
0x16786a0 is red
0x16787d0 is red
0x16788b0 is red
0x1678ac0 is red
0x1678bf0 is red
0x1679780 is red
basic block 94 is a predecessor
got the corresponding RichBasicBlock
<94> (succs: 110 127 ) is white, visiting it first
basic block 93 is a predecessor
got the corresponding RichBasicBlock
0x1679780 is red
0x16798b0 is red
These are all the basic blocks:
<3> (succs: 5 4 )
<6> (succs: 125 7 )
<7> (succs: 125 8 )
<8> (succs: 9 20 )
<9> (succs: 126 10 )
<10> (succs: 126 121 )
<11> (succs: 12 20 )
<12> (succs: 13 14 )
<13> (succs: 15 )
<14> (succs: 15 )
<15> (succs: 19 16 )
<16> (succs: 17 18 )
<17> (succs: 19 )
<18> (succs: 20 )
<19> (succs: 123 )
<20> (succs: 21 119 )
<21> (succs: 130 22 )
<22> (succs: 23 27 )
<23> (succs: 24 27 )
<24> (succs: 25 26 )
<26> (succs: 25 27 )
<27> (succs: 28 32 )
<32> (succs: 130 33 )
<33> (succs: 130 34 )
<34> (succs: 130 35 )
<35> (succs: 36 37 )
<39> (succs: 40 38 )
<45> (succs: 130 46 54 )
<46> (succs: 47 49 )
<47> (succs: 48 49 )
<49> (succs: 50 51 )
<50> (succs: 48 51 )
<51> (succs: 44 52 )
<52> (succs: 53 54 )
<53> (succs: 54 )
<54> (succs: 48 55 )
<55> (succs: 56 58 )
<56> (succs: 40 57 )
<57> (succs: 58 )
<58> (succs: 130 59 )
<59> (succs: 60 65 )
<61> (succs: 130 62 64 )
<62> (succs: 60 63 )
<63> (succs: 65 )
<64> (succs: 65 )
<65> (succs: 66 71 )
<66> (succs: 67 68 )
<67> (succs: 68 )
<68> (succs: 69 71 )
<69> (succs: 70 71 )
<70> (succs: 71 )
<71> (succs: 72 75 )
<72> (succs: 128 75 )
<73> (succs: 128 74 )
<77> (succs: 78 80 )
<78> (succs: 128 79 )
<79> (succs: 80 )
<80> (succs: 81 82 )
<81> (succs: 99 )
<82> (succs: 111 83 )
<83> (succs: 84 93 )
<84> (succs: 86 85 )
<86> (succs: 110 85 )
<88> (succs: 108 87 )
<89> (succs: 90 92 )
<90> (succs: 91 92 )
<91> (succs: 92 )
<92> (succs: 95 96 )
<93> (succs: 94 127 )
<94> (succs: 110 127 )
<95> (succs: 96 )
<96> (succs: 97 98 )
<97> (succs: 98 )
<98> (succs: 99 )
<99> (succs: 100 105 )
<100> (succs: 101 104 )
<101> (succs: 102 104 )
<102> (succs: 103 104 )
<103> (succs: 105 )
<105> (succs: 114 )
<106> (succs: 107 108 )
<107> (succs: 108 )
<108> (succs: 109 110 )
<109> (succs: 110 )
<110> (succs: 111 )
<111> (succs: 112 113 )
<112> (succs: 113 )
<113> (succs: 114 )
<114> (succs: 116 115 )
<116> (succs: 129 117 )
<117> (succs: 129 118 )
<120> (succs: 121 122 )
<121> (succs: 122 )
<122> (succs: 123 )
<123> (succs: 1 )
<5> (succs: 122 6 )
<4> (succs: 5 124 )
<28> (succs: 29 31 )
<29> (succs: 30 31 )
<30> (succs: 31 )
<31> (succs: 32 )
<37> (succs: 39 38 )
<42> (succs: 43 41 )
<43> (succs: 44 41 )
(Loop header) <76> (succs: 73 77 )
<124> (succs: 5 )
<129> (succs: 120 )
<130> (succs: 120 )
<125> (succs: 8 )
<126> (succs: 20 )
<119> (succs: 120 )
<25> (succs: 27 )
<36> (succs: 130 )
<38> (succs: 42 41 )
<40> (succs: 130 )
<41> (succs: 45 61 )
<44> (succs: 130 )
<48> (succs: 130 )
<60> (succs: 130 )
<75> (succs: 76 )
<128> (succs: 130 )
<74> (succs: 76 )
<85> (succs: 88 87 )
<87> (succs: 106 89 )
<127> (succs: 98 )
<104> (succs: 105 )
<115> (succs: 130 )
<118> (succs: 130 )
<0> (succs: 2 )
<1> (succs: )
<2> (succs: 3 11 )
These are the basic blocks from the interesting subgraph:

Starting the walk until <127> (succs: 98 )
Configuration created, _constraints size: 0
Reached <0> (succs: 2 )
Handled all statements
----------------------
Result of the analysis
paths found: 0
paths rejected: 1
----------------------

Examining <81> (succs: 99 )
basic block 80 is a predecessor
got the corresponding RichBasicBlock
<80> (succs: 81 82 ) is white, visiting it first
basic block 77 is a predecessor
got the corresponding RichBasicBlock
<77> (succs: 78 80 ) is white, visiting it first
basic block 76 is a predecessor
got the corresponding RichBasicBlock
(Loop header) <76> (succs: 73 77 ) is white, visiting it first
basic block 75 is a predecessor
got the corresponding RichBasicBlock
<75> (succs: 76 ) is white, visiting it first
basic block 71 is a predecessor
got the corresponding RichBasicBlock
<71> (succs: 72 75 ) is white, visiting it first
basic block 65 is a predecessor
got the corresponding RichBasicBlock
<65> (succs: 66 71 ) is white, visiting it first
basic block 59 is a predecessor
got the corresponding RichBasicBlock
<59> (succs: 60 65 ) is white, visiting it first
basic block 58 is a predecessor
got the corresponding RichBasicBlock
<58> (succs: 130 59 ) is white, visiting it first
basic block 55 is a predecessor
got the corresponding RichBasicBlock
<55> (succs: 56 58 ) is white, visiting it first
basic block 54 is a predecessor
got the corresponding RichBasicBlock
<54> (succs: 48 55 ) is white, visiting it first
basic block 45 is a predecessor
got the corresponding RichBasicBlock
<45> (succs: 130 46 54 ) is white, visiting it first
basic block 41 is a predecessor
got the corresponding RichBasicBlock
<41> (succs: 45 61 ) is white, visiting it first
basic block 38 is a predecessor
got the corresponding RichBasicBlock
<38> (succs: 42 41 ) is white, visiting it first
basic block 37 is a predecessor
got the corresponding RichBasicBlock
<37> (succs: 39 38 ) is white, visiting it first
basic block 35 is a predecessor
got the corresponding RichBasicBlock
<35> (succs: 36 37 ) is white, visiting it first
basic block 34 is a predecessor
got the corresponding RichBasicBlock
<34> (succs: 130 35 ) is white, visiting it first
basic block 33 is a predecessor
got the corresponding RichBasicBlock
<33> (succs: 130 34 ) is white, visiting it first
basic block 32 is a predecessor
got the corresponding RichBasicBlock
<32> (succs: 130 33 ) is white, visiting it first
basic block 27 is a predecessor
got the corresponding RichBasicBlock
<27> (succs: 28 32 ) is white, visiting it first
basic block 22 is a predecessor
got the corresponding RichBasicBlock
<22> (succs: 23 27 ) is white, visiting it first
basic block 21 is a predecessor
got the corresponding RichBasicBlock
<21> (succs: 130 22 ) is white, visiting it first
basic block 20 is a predecessor
got the corresponding RichBasicBlock
0x15b69b0 is red
0x15b6ae0 is red
0x15b6c10 is red
basic block 23 is a predecessor
got the corresponding RichBasicBlock
<23> (succs: 24 27 ) is white, visiting it first
basic block 22 is a predecessor
got the corresponding RichBasicBlock
0x15b6c10 is red
0x15b6d40 is red
basic block 26 is a predecessor
got the corresponding RichBasicBlock
<26> (succs: 25 27 ) is white, visiting it first
basic block 24 is a predecessor
got the corresponding RichBasicBlock
<24> (succs: 25 26 ) is white, visiting it first
basic block 23 is a predecessor
got the corresponding RichBasicBlock
0x15b6d40 is red
0x15b6e70 is red
0x15b7080 is red
basic block 25 is a predecessor
got the corresponding RichBasicBlock
<25> (succs: 27 ) is white, visiting it first
basic block 24 is a predecessor
got the corresponding RichBasicBlock
0x15b6e70 is red
basic block 26 is a predecessor
got the corresponding RichBasicBlock
0x15b7080 is red
0x15b6fa0 is red
0x1570460 is red
basic block 31 is a predecessor
got the corresponding RichBasicBlock
<31> (succs: 32 ) is white, visiting it first
basic block 28 is a predecessor
got the corresponding RichBasicBlock
<28> (succs: 29 31 ) is white, visiting it first
basic block 27 is a predecessor
got the corresponding RichBasicBlock
0x1570460 is red
0x1570550 is red
basic block 29 is a predecessor
got the corresponding RichBasicBlock
<29> (succs: 30 31 ) is white, visiting it first
basic block 28 is a predecessor
got the corresponding RichBasicBlock
0x1570550 is red
0x1570680 is red
basic block 30 is a predecessor
got the corresponding RichBasicBlock
<30> (succs: 31 ) is white, visiting it first
basic block 29 is a predecessor
got the corresponding RichBasicBlock
0x1570680 is red
0x15707b0 is red
0x1570890 is red
0x1570970 is red
0x1570aa0 is red
0x1570bd0 is red
0x1570d00 is red
0x1570f10 is red
basic block 39 is a predecessor
got the corresponding RichBasicBlock
<39> (succs: 40 38 ) is white, visiting it first
basic block 37 is a predecessor
got the corresponding RichBasicBlock
0x1570f10 is red
0x1571170 is red
0x1571040 is red
basic block 42 is a predecessor
got the corresponding RichBasicBlock
<42> (succs: 43 41 ) is white, visiting it first
basic block 38 is a predecessor
got the corresponding RichBasicBlock
0x1571040 is red
0x156f600 is red
basic block 43 is a predecessor
got the corresponding RichBasicBlock
<43> (succs: 44 41 ) is white, visiting it first
basic block 42 is a predecessor
got the corresponding RichBasicBlock
0x156f600 is red
0x156f730 is red
0x156f4d0 is red
0x156f940 is red
basic block 52 is a predecessor
got the corresponding RichBasicBlock
<52> (succs: 53 54 ) is white, visiting it first
basic block 51 is a predecessor
got the corresponding RichBasicBlock
<51> (succs: 44 52 ) is white, visiting it first
basic block 50 is a predecessor
got the corresponding RichBasicBlock
<50> (succs: 48 51 ) is white, visiting it first
basic block 49 is a predecessor
got the corresponding RichBasicBlock
<49> (succs: 50 51 ) is white, visiting it first
basic block 47 is a predecessor
got the corresponding RichBasicBlock
<47> (succs: 48 49 ) is white, visiting it first
basic block 46 is a predecessor
got the corresponding RichBasicBlock
<46> (succs: 47 49 ) is white, visiting it first
basic block 45 is a predecessor
got the corresponding RichBasicBlock
0x156f940 is red
0x156fac0 is red
0x156fbf0 is red
basic block 46 is a predecessor
got the corresponding RichBasicBlock
0x156fac0 is red
0x156fe00 is red
0x156ff30 is red
basic block 49 is a predecessor
got the corresponding RichBasicBlock
0x156fe00 is red
0x1570060 is red
0x1570190 is red
basic block 53 is a predecessor
got the corresponding RichBasicBlock
<53> (succs: 54 ) is white, visiting it first
basic block 52 is a predecessor
got the corresponding RichBasicBlock
0x1570190 is red
0x15702c0 is red
0x15703a0 is red
0x15722d0 is red
basic block 57 is a predecessor
got the corresponding RichBasicBlock
<57> (succs: 58 ) is white, visiting it first
basic block 56 is a predecessor
got the corresponding RichBasicBlock
<56> (succs: 40 57 ) is white, visiting it first
basic block 55 is a predecessor
got the corresponding RichBasicBlock
0x15722d0 is red
0x1572400 is red
0x1572530 is red
0x1572610 is red
0x1572740 is red
basic block 63 is a predecessor
got the corresponding RichBasicBlock
<63> (succs: 65 ) is white, visiting it first
basic block 62 is a predecessor
got the corresponding RichBasicBlock
<62> (succs: 60 63 ) is white, visiting it first
basic block 61 is a predecessor
got the corresponding RichBasicBlock
<61> (succs: 130 62 64 ) is white, visiting it first
basic block 41 is a predecessor
got the corresponding RichBasicBlock
0x156f4d0 is red
0x1572950 is red
0x1572ad0 is red
0x1572c00 is red
basic block 64 is a predecessor
got the corresponding RichBasicBlock
<64> (succs: 65 ) is white, visiting it first
basic block 61 is a predecessor
got the corresponding RichBasicBlock
0x1572950 is red
0x1572ce0 is red
0x1572dc0 is red
basic block 68 is a predecessor
got the corresponding RichBasicBlock
<68> (succs: 69 71 ) is white, visiting it first
basic block 66 is a predecessor
got the corresponding RichBasicBlock
<66> (succs: 67 68 ) is white, visiting it first
basic block 65 is a predecessor
got the corresponding RichBasicBlock
0x1572dc0 is red
0x1572ef0 is red
basic block 67 is a predecessor
got the corresponding RichBasicBlock
<67> (succs: 68 ) is white, visiting it first
basic block 66 is a predecessor
got the corresponding RichBasicBlock
0x1572ef0 is red
0x1573020 is red
0x1573100 is red
basic block 69 is a predecessor
got the corresponding RichBasicBlock
<69> (succs: 70 71 ) is white, visiting it first
basic block 68 is a predecessor
got the corresponding RichBasicBlock
0x1573100 is red
0x1573230 is red
basic block 70 is a predecessor
got the corresponding RichBasicBlock
<70> (succs: 71 ) is white, visiting it first
basic block 69 is a predecessor
got the corresponding RichBasicBlock
0x1573230 is red
0x1573360 is red
0x1573440 is red
basic block 72 is a predecessor
got the corresponding RichBasicBlock
<72> (succs: 128 75 ) is white, visiting it first
basic block 71 is a predecessor
got the corresponding RichBasicBlock
0x1573440 is red
0x1573570 is red
0x1678360 is red
basic block 74 is a predecessor
Stuck in a loop, abandoning this path
0x1678440 is red
0x1678570 is red
basic block 79 is a predecessor
got the corresponding RichBasicBlock
<79> (succs: 80 ) is white, visiting it first
basic block 78 is a predecessor
got the corresponding RichBasicBlock
0x16786a0 is red
0x16787d0 is red
0x16788b0 is red
These are all the basic blocks:
<3> (succs: 5 4 )
<6> (succs: 125 7 )
<7> (succs: 125 8 )
<8> (succs: 9 20 )
<9> (succs: 126 10 )
<10> (succs: 126 121 )
<11> (succs: 12 20 )
<12> (succs: 13 14 )
<13> (succs: 15 )
<14> (succs: 15 )
<15> (succs: 19 16 )
<16> (succs: 17 18 )
<17> (succs: 19 )
<18> (succs: 20 )
<19> (succs: 123 )
<20> (succs: 21 119 )
<21> (succs: 130 22 )
<22> (succs: 23 27 )
<23> (succs: 24 27 )
<24> (succs: 25 26 )
<26> (succs: 25 27 )
<27> (succs: 28 32 )
<32> (succs: 130 33 )
<33> (succs: 130 34 )
<34> (succs: 130 35 )
<35> (succs: 36 37 )
<39> (succs: 40 38 )
<45> (succs: 130 46 54 )
<46> (succs: 47 49 )
<47> (succs: 48 49 )
<49> (succs: 50 51 )
<50> (succs: 48 51 )
<51> (succs: 44 52 )
<52> (succs: 53 54 )
<53> (succs: 54 )
<54> (succs: 48 55 )
<55> (succs: 56 58 )
<56> (succs: 40 57 )
<57> (succs: 58 )
<58> (succs: 130 59 )
<59> (succs: 60 65 )
<61> (succs: 130 62 64 )
<62> (succs: 60 63 )
<63> (succs: 65 )
<64> (succs: 65 )
<65> (succs: 66 71 )
<66> (succs: 67 68 )
<67> (succs: 68 )
<68> (succs: 69 71 )
<69> (succs: 70 71 )
<70> (succs: 71 )
<71> (succs: 72 75 )
<72> (succs: 128 75 )
<73> (succs: 128 74 )
<77> (succs: 78 80 )
<78> (succs: 128 79 )
<79> (succs: 80 )
<80> (succs: 81 82 )
<81> (succs: 99 )
<82> (succs: 111 83 )
<83> (succs: 84 93 )
<84> (succs: 86 85 )
<86> (succs: 110 85 )
<88> (succs: 108 87 )
<89> (succs: 90 92 )
<90> (succs: 91 92 )
<91> (succs: 92 )
<92> (succs: 95 96 )
<93> (succs: 94 127 )
<94> (succs: 110 127 )
<95> (succs: 96 )
<96> (succs: 97 98 )
<97> (succs: 98 )
<98> (succs: 99 )
<99> (succs: 100 105 )
<100> (succs: 101 104 )
<101> (succs: 102 104 )
<102> (succs: 103 104 )
<103> (succs: 105 )
<105> (succs: 114 )
<106> (succs: 107 108 )
<107> (succs: 108 )
<108> (succs: 109 110 )
<109> (succs: 110 )
<110> (succs: 111 )
<111> (succs: 112 113 )
<112> (succs: 113 )
<113> (succs: 114 )
<114> (succs: 116 115 )
<116> (succs: 129 117 )
<117> (succs: 129 118 )
<120> (succs: 121 122 )
<121> (succs: 122 )
<122> (succs: 123 )
<123> (succs: 1 )
<5> (succs: 122 6 )
<4> (succs: 5 124 )
<28> (succs: 29 31 )
<29> (succs: 30 31 )
<30> (succs: 31 )
<31> (succs: 32 )
<37> (succs: 39 38 )
<42> (succs: 43 41 )
<43> (succs: 44 41 )
(Loop header) <76> (succs: 73 77 )
<124> (succs: 5 )
<129> (succs: 120 )
<130> (succs: 120 )
<125> (succs: 8 )
<126> (succs: 20 )
<119> (succs: 120 )
<25> (succs: 27 )
<36> (succs: 130 )
<38> (succs: 42 41 )
<40> (succs: 130 )
<41> (succs: 45 61 )
<44> (succs: 130 )
<48> (succs: 130 )
<60> (succs: 130 )
<75> (succs: 76 )
<128> (succs: 130 )
<74> (succs: 76 )
<85> (succs: 88 87 )
<87> (succs: 106 89 )
<127> (succs: 98 )
<104> (succs: 105 )
<115> (succs: 130 )
<118> (succs: 130 )
<0> (succs: 2 )
<1> (succs: )
<2> (succs: 3 11 )
These are the basic blocks from the interesting subgraph:

Starting the walk until <81> (succs: 99 )
Configuration created, _constraints size: 0
Reached <0> (succs: 2 )
Handled all statements
----------------------
Result of the analysis
paths found: 0
paths rejected: 1
----------------------

Examining <92> (succs: 95 96 )
basic block 90 is a predecessor
got the corresponding RichBasicBlock
<90> (succs: 91 92 ) is white, visiting it first
basic block 89 is a predecessor
got the corresponding RichBasicBlock
<89> (succs: 90 92 ) is white, visiting it first
basic block 87 is a predecessor
got the corresponding RichBasicBlock
<87> (succs: 106 89 ) is white, visiting it first
basic block 85 is a predecessor
got the corresponding RichBasicBlock
<85> (succs: 88 87 ) is white, visiting it first
basic block 84 is a predecessor
got the corresponding RichBasicBlock
<84> (succs: 86 85 ) is white, visiting it first
basic block 83 is a predecessor
got the corresponding RichBasicBlock
<83> (succs: 84 93 ) is white, visiting it first
basic block 82 is a predecessor
got the corresponding RichBasicBlock
<82> (succs: 111 83 ) is white, visiting it first
basic block 80 is a predecessor
got the corresponding RichBasicBlock
<80> (succs: 81 82 ) is white, visiting it first
basic block 77 is a predecessor
got the corresponding RichBasicBlock
<77> (succs: 78 80 ) is white, visiting it first
basic block 76 is a predecessor
got the corresponding RichBasicBlock
(Loop header) <76> (succs: 73 77 ) is white, visiting it first
basic block 75 is a predecessor
got the corresponding RichBasicBlock
<75> (succs: 76 ) is white, visiting it first
basic block 71 is a predecessor
got the corresponding RichBasicBlock
<71> (succs: 72 75 ) is white, visiting it first
basic block 65 is a predecessor
got the corresponding RichBasicBlock
<65> (succs: 66 71 ) is white, visiting it first
basic block 59 is a predecessor
got the corresponding RichBasicBlock
<59> (succs: 60 65 ) is white, visiting it first
basic block 58 is a predecessor
got the corresponding RichBasicBlock
<58> (succs: 130 59 ) is white, visiting it first
basic block 55 is a predecessor
got the corresponding RichBasicBlock
<55> (succs: 56 58 ) is white, visiting it first
basic block 54 is a predecessor
got the corresponding RichBasicBlock
<54> (succs: 48 55 ) is white, visiting it first
basic block 45 is a predecessor
got the corresponding RichBasicBlock
<45> (succs: 130 46 54 ) is white, visiting it first
basic block 41 is a predecessor
got the corresponding RichBasicBlock
<41> (succs: 45 61 ) is white, visiting it first
basic block 38 is a predecessor
got the corresponding RichBasicBlock
<38> (succs: 42 41 ) is white, visiting it first
basic block 37 is a predecessor
got the corresponding RichBasicBlock
<37> (succs: 39 38 ) is white, visiting it first
basic block 35 is a predecessor
got the corresponding RichBasicBlock
<35> (succs: 36 37 ) is white, visiting it first
basic block 34 is a predecessor
got the corresponding RichBasicBlock
<34> (succs: 130 35 ) is white, visiting it first
basic block 33 is a predecessor
got the corresponding RichBasicBlock
<33> (succs: 130 34 ) is white, visiting it first
basic block 32 is a predecessor
got the corresponding RichBasicBlock
<32> (succs: 130 33 ) is white, visiting it first
basic block 27 is a predecessor
got the corresponding RichBasicBlock
<27> (succs: 28 32 ) is white, visiting it first
basic block 22 is a predecessor
got the corresponding RichBasicBlock
<22> (succs: 23 27 ) is white, visiting it first
basic block 21 is a predecessor
got the corresponding RichBasicBlock
<21> (succs: 130 22 ) is white, visiting it first
basic block 20 is a predecessor
got the corresponding RichBasicBlock
0x15b69b0 is red
0x15b6ae0 is red
0x15b6c10 is red
basic block 23 is a predecessor
got the corresponding RichBasicBlock
<23> (succs: 24 27 ) is white, visiting it first
basic block 22 is a predecessor
got the corresponding RichBasicBlock
0x15b6c10 is red
0x15b6d40 is red
basic block 26 is a predecessor
got the corresponding RichBasicBlock
<26> (succs: 25 27 ) is white, visiting it first
basic block 24 is a predecessor
got the corresponding RichBasicBlock
<24> (succs: 25 26 ) is white, visiting it first
basic block 23 is a predecessor
got the corresponding RichBasicBlock
0x15b6d40 is red
0x15b6e70 is red
0x15b7080 is red
basic block 25 is a predecessor
got the corresponding RichBasicBlock
<25> (succs: 27 ) is white, visiting it first
basic block 24 is a predecessor
got the corresponding RichBasicBlock
0x15b6e70 is red
basic block 26 is a predecessor
got the corresponding RichBasicBlock
0x15b7080 is red
0x15b6fa0 is red
0x1570460 is red
basic block 31 is a predecessor
got the corresponding RichBasicBlock
<31> (succs: 32 ) is white, visiting it first
basic block 28 is a predecessor
got the corresponding RichBasicBlock
<28> (succs: 29 31 ) is white, visiting it first
basic block 27 is a predecessor
got the corresponding RichBasicBlock
0x1570460 is red
0x1570550 is red
basic block 29 is a predecessor
got the corresponding RichBasicBlock
<29> (succs: 30 31 ) is white, visiting it first
basic block 28 is a predecessor
got the corresponding RichBasicBlock
0x1570550 is red
0x1570680 is red
basic block 30 is a predecessor
got the corresponding RichBasicBlock
<30> (succs: 31 ) is white, visiting it first
basic block 29 is a predecessor
got the corresponding RichBasicBlock
0x1570680 is red
0x15707b0 is red
0x1570890 is red
0x1570970 is red
0x1570aa0 is red
0x1570bd0 is red
0x1570d00 is red
0x1570f10 is red
basic block 39 is a predecessor
got the corresponding RichBasicBlock
<39> (succs: 40 38 ) is white, visiting it first
basic block 37 is a predecessor
got the corresponding RichBasicBlock
0x1570f10 is red
0x1571170 is red
0x1571040 is red
basic block 42 is a predecessor
got the corresponding RichBasicBlock
<42> (succs: 43 41 ) is white, visiting it first
basic block 38 is a predecessor
got the corresponding RichBasicBlock
0x1571040 is red
0x156f600 is red
basic block 43 is a predecessor
got the corresponding RichBasicBlock
<43> (succs: 44 41 ) is white, visiting it first
basic block 42 is a predecessor
got the corresponding RichBasicBlock
0x156f600 is red
0x156f730 is red
0x156f4d0 is red
0x156f940 is red
basic block 52 is a predecessor
got the corresponding RichBasicBlock
<52> (succs: 53 54 ) is white, visiting it first
basic block 51 is a predecessor
got the corresponding RichBasicBlock
<51> (succs: 44 52 ) is white, visiting it first
basic block 50 is a predecessor
got the corresponding RichBasicBlock
<50> (succs: 48 51 ) is white, visiting it first
basic block 49 is a predecessor
got the corresponding RichBasicBlock
<49> (succs: 50 51 ) is white, visiting it first
basic block 47 is a predecessor
got the corresponding RichBasicBlock
<47> (succs: 48 49 ) is white, visiting it first
basic block 46 is a predecessor
got the corresponding RichBasicBlock
<46> (succs: 47 49 ) is white, visiting it first
basic block 45 is a predecessor
got the corresponding RichBasicBlock
0x156f940 is red
0x156fac0 is red
0x156fbf0 is red
basic block 46 is a predecessor
got the corresponding RichBasicBlock
0x156fac0 is red
0x156fe00 is red
0x156ff30 is red
basic block 49 is a predecessor
got the corresponding RichBasicBlock
0x156fe00 is red
0x1570060 is red
0x1570190 is red
basic block 53 is a predecessor
got the corresponding RichBasicBlock
<53> (succs: 54 ) is white, visiting it first
basic block 52 is a predecessor
got the corresponding RichBasicBlock
0x1570190 is red
0x15702c0 is red
0x15703a0 is red
0x15722d0 is red
basic block 57 is a predecessor
got the corresponding RichBasicBlock
<57> (succs: 58 ) is white, visiting it first
basic block 56 is a predecessor
got the corresponding RichBasicBlock
<56> (succs: 40 57 ) is white, visiting it first
basic block 55 is a predecessor
got the corresponding RichBasicBlock
0x15722d0 is red
0x1572400 is red
0x1572530 is red
0x1572610 is red
0x1572740 is red
basic block 63 is a predecessor
got the corresponding RichBasicBlock
<63> (succs: 65 ) is white, visiting it first
basic block 62 is a predecessor
got the corresponding RichBasicBlock
<62> (succs: 60 63 ) is white, visiting it first
basic block 61 is a predecessor
got the corresponding RichBasicBlock
<61> (succs: 130 62 64 ) is white, visiting it first
basic block 41 is a predecessor
got the corresponding RichBasicBlock
0x156f4d0 is red
0x1572950 is red
0x1572ad0 is red
0x1572c00 is red
basic block 64 is a predecessor
got the corresponding RichBasicBlock
<64> (succs: 65 ) is white, visiting it first
basic block 61 is a predecessor
got the corresponding RichBasicBlock
0x1572950 is red
0x1572ce0 is red
0x1572dc0 is red
basic block 68 is a predecessor
got the corresponding RichBasicBlock
<68> (succs: 69 71 ) is white, visiting it first
basic block 66 is a predecessor
got the corresponding RichBasicBlock
<66> (succs: 67 68 ) is white, visiting it first
basic block 65 is a predecessor
got the corresponding RichBasicBlock
0x1572dc0 is red
0x1572ef0 is red
basic block 67 is a predecessor
got the corresponding RichBasicBlock
<67> (succs: 68 ) is white, visiting it first
basic block 66 is a predecessor
got the corresponding RichBasicBlock
0x1572ef0 is red
0x1573020 is red
0x1573100 is red
basic block 69 is a predecessor
got the corresponding RichBasicBlock
<69> (succs: 70 71 ) is white, visiting it first
basic block 68 is a predecessor
got the corresponding RichBasicBlock
0x1573100 is red
0x1573230 is red
basic block 70 is a predecessor
got the corresponding RichBasicBlock
<70> (succs: 71 ) is white, visiting it first
basic block 69 is a predecessor
got the corresponding RichBasicBlock
0x1573230 is red
0x1573360 is red
0x1573440 is red
basic block 72 is a predecessor
got the corresponding RichBasicBlock
<72> (succs: 128 75 ) is white, visiting it first
basic block 71 is a predecessor
got the corresponding RichBasicBlock
0x1573440 is red
0x1573570 is red
0x1678360 is red
basic block 74 is a predecessor
Stuck in a loop, abandoning this path
0x1678440 is red
0x1678570 is red
basic block 79 is a predecessor
got the corresponding RichBasicBlock
<79> (succs: 80 ) is white, visiting it first
basic block 78 is a predecessor
got the corresponding RichBasicBlock
0x16786a0 is red
0x16787d0 is red
0x16788b0 is red
0x1678ac0 is red
0x1678bf0 is red
0x1678d20 is red
basic block 86 is a predecessor
got the corresponding RichBasicBlock
<86> (succs: 110 85 ) is white, visiting it first
basic block 84 is a predecessor
got the corresponding RichBasicBlock
0x1678d20 is red
0x1678f80 is red
0x1678e50 is red
basic block 88 is a predecessor
got the corresponding RichBasicBlock
<88> (succs: 108 87 ) is white, visiting it first
basic block 85 is a predecessor
got the corresponding RichBasicBlock
0x1678e50 is red
0x16791e0 is red
0x16790b0 is red
0x1679310 is red
0x1679440 is red
basic block 91 is a predecessor
got the corresponding RichBasicBlock
<91> (succs: 92 ) is white, visiting it first
basic block 90 is a predecessor
got the corresponding RichBasicBlock
0x1679440 is red
0x1679570 is red
basic block 89 is a predecessor
got the corresponding RichBasicBlock
0x1679310 is red
These are all the basic blocks:
<3> (succs: 5 4 )
<6> (succs: 125 7 )
<7> (succs: 125 8 )
<8> (succs: 9 20 )
<9> (succs: 126 10 )
<10> (succs: 126 121 )
<11> (succs: 12 20 )
<12> (succs: 13 14 )
<13> (succs: 15 )
<14> (succs: 15 )
<15> (succs: 19 16 )
<16> (succs: 17 18 )
<17> (succs: 19 )
<18> (succs: 20 )
<19> (succs: 123 )
<20> (succs: 21 119 )
<21> (succs: 130 22 )
<22> (succs: 23 27 )
<23> (succs: 24 27 )
<24> (succs: 25 26 )
<26> (succs: 25 27 )
<27> (succs: 28 32 )
<32> (succs: 130 33 )
<33> (succs: 130 34 )
<34> (succs: 130 35 )
<35> (succs: 36 37 )
<39> (succs: 40 38 )
<45> (succs: 130 46 54 )
<46> (succs: 47 49 )
<47> (succs: 48 49 )
<49> (succs: 50 51 )
<50> (succs: 48 51 )
<51> (succs: 44 52 )
<52> (succs: 53 54 )
<53> (succs: 54 )
<54> (succs: 48 55 )
<55> (succs: 56 58 )
<56> (succs: 40 57 )
<57> (succs: 58 )
<58> (succs: 130 59 )
<59> (succs: 60 65 )
<61> (succs: 130 62 64 )
<62> (succs: 60 63 )
<63> (succs: 65 )
<64> (succs: 65 )
<65> (succs: 66 71 )
<66> (succs: 67 68 )
<67> (succs: 68 )
<68> (succs: 69 71 )
<69> (succs: 70 71 )
<70> (succs: 71 )
<71> (succs: 72 75 )
<72> (succs: 128 75 )
<73> (succs: 128 74 )
<77> (succs: 78 80 )
<78> (succs: 128 79 )
<79> (succs: 80 )
<80> (succs: 81 82 )
<81> (succs: 99 )
<82> (succs: 111 83 )
<83> (succs: 84 93 )
<84> (succs: 86 85 )
<86> (succs: 110 85 )
<88> (succs: 108 87 )
<89> (succs: 90 92 )
<90> (succs: 91 92 )
<91> (succs: 92 )
<92> (succs: 95 96 )
<93> (succs: 94 127 )
<94> (succs: 110 127 )
<95> (succs: 96 )
<96> (succs: 97 98 )
<97> (succs: 98 )
<98> (succs: 99 )
<99> (succs: 100 105 )
<100> (succs: 101 104 )
<101> (succs: 102 104 )
<102> (succs: 103 104 )
<103> (succs: 105 )
<105> (succs: 114 )
<106> (succs: 107 108 )
<107> (succs: 108 )
<108> (succs: 109 110 )
<109> (succs: 110 )
<110> (succs: 111 )
<111> (succs: 112 113 )
<112> (succs: 113 )
<113> (succs: 114 )
<114> (succs: 116 115 )
<116> (succs: 129 117 )
<117> (succs: 129 118 )
<120> (succs: 121 122 )
<121> (succs: 122 )
<122> (succs: 123 )
<123> (succs: 1 )
<5> (succs: 122 6 )
<4> (succs: 5 124 )
<28> (succs: 29 31 )
<29> (succs: 30 31 )
<30> (succs: 31 )
<31> (succs: 32 )
<37> (succs: 39 38 )
<42> (succs: 43 41 )
<43> (succs: 44 41 )
(Loop header) <76> (succs: 73 77 )
<124> (succs: 5 )
<129> (succs: 120 )
<130> (succs: 120 )
<125> (succs: 8 )
<126> (succs: 20 )
<119> (succs: 120 )
<25> (succs: 27 )
<36> (succs: 130 )
<38> (succs: 42 41 )
<40> (succs: 130 )
<41> (succs: 45 61 )
<44> (succs: 130 )
<48> (succs: 130 )
<60> (succs: 130 )
<75> (succs: 76 )
<128> (succs: 130 )
<74> (succs: 76 )
<85> (succs: 88 87 )
<87> (succs: 106 89 )
<127> (succs: 98 )
<104> (succs: 105 )
<115> (succs: 130 )
<118> (succs: 130 )
<0> (succs: 2 )
<1> (succs: )
<2> (succs: 3 11 )
These are the basic blocks from the interesting subgraph:

Starting the walk until <92> (succs: 95 96 )
Configuration created, _constraints size: 0
Reached <0> (succs: 2 )
Handled all statements
----------------------
Result of the analysis
paths found: 0
paths rejected: 1
----------------------

