fs/exec.c:1640:36: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) int do_execveat(int fd, struct filename *filename,
                                    ^
fs/exec.c:1631:36: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) int do_execve(struct filename *filename,
                                    ^
fs/exec.c:1487:43: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) static int do_execveat_common(int fd, struct filename *filename,
                                           ^
fs/exec.c:1461:43: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) static int exec_binprm(struct linux_binprm *bprm)
                                           ^
fs/exec.c:1408:36: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) int search_binary_handler(struct linux_binprm *bprm)
                                    ^
fs/exec.c:1342:36: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) int prepare_binprm(struct linux_binprm *bprm)
                                    ^
fs/exec.c:1223:37: attention : always_inline function might not be inlinable [-Wattributes]
 __attribute__((always_inline)) void install_exec_creds(struct linux_binprm *bprm)
                                     ^
Building the rich basic blocks
About to build basic block 0
is it a loop? false
Building a regular RichBasicBlock 0
About to build basic block 2
is it a loop? false
Building a regular RichBasicBlock 2
    has flow: false    has LSM: false
About to build basic block 3
is it a loop? false
Building a regular RichBasicBlock 3
    has flow: false    has LSM: false
About to build basic block 4
is it a loop? false
Building a regular RichBasicBlock 4
GIMPLE CALL
GIMPLE CALL with a decl
name: getname_flags	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 5
is it a loop? false
Building a regular RichBasicBlock 5
    has flow: false    has LSM: false
About to build basic block 6
is it a loop? false
Building a regular RichBasicBlock 6
    has flow: false    has LSM: false
About to build basic block 7
is it a loop? false
Building a regular RichBasicBlock 7
    has flow: false    has LSM: false
About to build basic block 8
is it a loop? false
Building a regular RichBasicBlock 8
GIMPLE CALL
GIMPLE CALL with a decl
name: unshare_files	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 9
is it a loop? false
Building a regular RichBasicBlock 9
    has flow: false    has LSM: false
About to build basic block 10
is it a loop? false
Building a regular RichBasicBlock 10
GIMPLE CALL
GIMPLE CALL with a decl
name: kmem_cache_alloc_trace	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 11
is it a loop? false
Building a regular RichBasicBlock 11
GIMPLE CALL
GIMPLE CALL with a decl
name: prepare_bprm_creds	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 12
is it a loop? false
Building a regular RichBasicBlock 12
    has flow: false    has LSM: false
About to build basic block 13
is it a loop? false
Building a regular RichBasicBlock 13
GIMPLE CALL
GIMPLE CALL with a decl
name: check_unsafe_exec.isra.21	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: do_open_execat	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 14
is it a loop? false
Building a regular RichBasicBlock 14
    has flow: false    has LSM: false
About to build basic block 15
is it a loop? false
Building a regular RichBasicBlock 15
GIMPLE CALL
GIMPLE CALL with a decl
name: sched_exec	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 16
is it a loop? false
Building a regular RichBasicBlock 16
    has flow: false    has LSM: false
About to build basic block 17
is it a loop? false
Building a regular RichBasicBlock 17
    has flow: false    has LSM: false
About to build basic block 18
is it a loop? false
Building a regular RichBasicBlock 18
    has flow: false    has LSM: false
About to build basic block 19
is it a loop? false
Building a regular RichBasicBlock 19
    has flow: false    has LSM: false
About to build basic block 20
is it a loop? false
Building a regular RichBasicBlock 20
GIMPLE CALL
GIMPLE CALL with a decl
name: kasprintf	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 21
is it a loop? false
Building a regular RichBasicBlock 21
GIMPLE CALL
GIMPLE CALL with a decl
name: kasprintf	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 22
is it a loop? false
Building a regular RichBasicBlock 22
    has flow: false    has LSM: false
About to build basic block 23
is it a loop? false
Building a regular RichBasicBlock 23
    has flow: false    has LSM: false
About to build basic block 24
is it a loop? false
Building a regular RichBasicBlock 24
    has flow: false    has LSM: false
About to build basic block 25
is it a loop? false
Building a regular RichBasicBlock 25
    has flow: false    has LSM: false
About to build basic block 26
is it a loop? false
Building a regular RichBasicBlock 26
GIMPLE CALL
GIMPLE CALL with a decl
name: bprm_mm_init	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 27
is it a loop? false
Building a regular RichBasicBlock 27
    has flow: false    has LSM: false
About to build basic block 28
is it a loop? false
Building a regular RichBasicBlock 28
GIMPLE CALL
GIMPLE CALL with a decl
name: count.isra.25.constprop.43	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 29
is it a loop? false
Building a regular RichBasicBlock 29
GIMPLE CALL
GIMPLE CALL with a decl
name: count.isra.25.constprop.43	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 30
is it a loop? false
Building a regular RichBasicBlock 30
GIMPLE CALL
GIMPLE CALL with a decl
name: bprm_fill_uid	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: security_bprm_set_creds	isLSM: true	isFlow: false
    has flow: false    has LSM: true
About to build basic block 31
is it a loop? false
Building a regular RichBasicBlock 31
GIMPLE CALL
GIMPLE CALL with a decl
name: memset	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: kernel_read	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 32
is it a loop? false
Building a regular RichBasicBlock 32
    has flow: false    has LSM: false
About to build basic block 33
is it a loop? false
Building a regular RichBasicBlock 33
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_strings_kernel	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 34
is it a loop? false
Building a regular RichBasicBlock 34
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_strings.isra.27	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 35
is it a loop? false
Building a regular RichBasicBlock 35
GIMPLE CALL
GIMPLE CALL with a decl
name: copy_strings.isra.27	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 36
is it a loop? false
Building a regular RichBasicBlock 36
GIMPLE CALL
GIMPLE CALL with a decl
name: task_active_pid_ns	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: __task_pid_nr_ns	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 37
is it a loop? false
Building a regular RichBasicBlock 37
GIMPLE CALL
GIMPLE CALL with a decl
name: security_bprm_check	isLSM: true	isFlow: false
    has flow: false    has LSM: true
About to build basic block 38
is it a loop? false
Building a regular RichBasicBlock 38
    has flow: false    has LSM: false
About to build basic block 39
is it a loop? true
Building a loop header pseudo-basic block
Building a regular RichBasicBlock 39
GIMPLE CALL
GIMPLE CALL with a decl
name: _raw_read_lock	isLSM: false	isFlow: false
    has flow: false    has LSM: false
Loop added for basic_block 39
About to build basic block 40
is it a loop? true
Building a regular RichBasicBlock 40
    has flow: false    has LSM: false
About to build basic block 41
is it a loop? true
Building a loop header pseudo-basic block
Building a regular RichBasicBlock 41
GIMPLE CALL
GIMPLE CALL with a decl
name: try_module_get	isLSM: false	isFlow: false
    has flow: false    has LSM: false
Loop added for basic_block 41
About to build basic block 42
is it a loop? true
Building a regular RichBasicBlock 42
GIMPLE CALL
GIMPLE CALL with a decl
name: __raw_read_unlock.constprop.42	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL
GIMPLE CALL with a decl
name: _raw_read_lock	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: module_put	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 43
is it a loop? true
Building a regular RichBasicBlock 43
    has flow: false    has LSM: false
About to build basic block 44
is it a loop? false
Building a regular RichBasicBlock 44
GIMPLE CALL
GIMPLE CALL with a decl
name: __raw_read_unlock.constprop.42	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: force_sigsegv	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 45
is it a loop? true
Building a regular RichBasicBlock 45
    has flow: false    has LSM: false
About to build basic block 46
is it a loop? true
Building a regular RichBasicBlock 46
    has flow: false    has LSM: false
About to build basic block 47
is it a loop? false
Building a regular RichBasicBlock 47
GIMPLE CALL
GIMPLE CALL with a decl
name: __raw_read_unlock.constprop.42	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 48
is it a loop? true
Building a regular RichBasicBlock 48
    has flow: false    has LSM: false
About to build basic block 49
is it a loop? true
Building a regular RichBasicBlock 49
    has flow: false    has LSM: false
About to build basic block 50
is it a loop? true
Building a regular RichBasicBlock 50
GIMPLE CALL
GIMPLE CALL with a decl
name: __raw_read_unlock.constprop.42	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 51
is it a loop? true
Building a regular RichBasicBlock 51
    has flow: false    has LSM: false
About to build basic block 52
is it a loop? true
Building a regular RichBasicBlock 52
    has flow: false    has LSM: false
About to build basic block 53
is it a loop? true
Building a regular RichBasicBlock 53
    has flow: false    has LSM: false
About to build basic block 54
is it a loop? true
Building a regular RichBasicBlock 54
    has flow: false    has LSM: false
About to build basic block 55
is it a loop? true
Building a regular RichBasicBlock 55
GIMPLE CALL
GIMPLE CALL with a decl
name: __request_module	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 56
is it a loop? true
Building a regular RichBasicBlock 56
    has flow: false    has LSM: false
About to build basic block 57
is it a loop? false
Building a regular RichBasicBlock 57
    has flow: false    has LSM: false
About to build basic block 58
is it a loop? false
Building a regular RichBasicBlock 58
GIMPLE CALL
GIMPLE CALL with a decl
name: kayrebt_FlowNodeMarker	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: audit_bprm	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: trace_sched_process_exec	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: ptrace_event.constprop.37	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: proc_exec_connector	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: acct_update_integrals	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: free_bprm	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: kfree	isLSM: false	isFlow: true
GIMPLE CALL
GIMPLE CALL with a decl
name: putname	isLSM: false	isFlow: true
    has flow: true    has LSM: false
About to build basic block 59
is it a loop? false
Building a regular RichBasicBlock 59
    has flow: false    has LSM: false
About to build basic block 60
is it a loop? false
Building a regular RichBasicBlock 60
GIMPLE CALL
GIMPLE CALL with a decl
name: put_files_struct	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 61
is it a loop? false
Building a regular RichBasicBlock 61
    has flow: false    has LSM: false
About to build basic block 62
is it a loop? false
Building a regular RichBasicBlock 62
    has flow: false    has LSM: false
About to build basic block 63
is it a loop? false
Building a regular RichBasicBlock 63
GIMPLE CALL
GIMPLE CALL with a decl
name: acct_arg_size.isra.16	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: mmput	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 64
is it a loop? false
Building a regular RichBasicBlock 64
    has flow: false    has LSM: false
About to build basic block 65
is it a loop? false
Building a regular RichBasicBlock 65
GIMPLE CALL
GIMPLE CALL with a decl
name: free_bprm	isLSM: false	isFlow: false
GIMPLE CALL
GIMPLE CALL with a decl
name: kfree	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 66
is it a loop? false
Building a regular RichBasicBlock 66
    has flow: false    has LSM: false
About to build basic block 67
is it a loop? false
Building a regular RichBasicBlock 67
GIMPLE CALL
GIMPLE CALL with a decl
name: reset_files_struct	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 68
is it a loop? false
Building a regular RichBasicBlock 68
GIMPLE CALL
GIMPLE CALL with a decl
name: putname	isLSM: false	isFlow: false
    has flow: false    has LSM: false
About to build basic block 69
is it a loop? false
Building a regular RichBasicBlock 69
    has flow: false    has LSM: false
About to build basic block 70
is it a loop? false
Building a regular RichBasicBlock 70
    has flow: false    has LSM: false
About to build basic block 71
is it a loop? false
Building a regular RichBasicBlock 71
    has flow: false    has LSM: false
About to build basic block 1
is it a loop? false
There are 1 bbs with flow nodes (excluding those having LSM nodes)
Examining <58> (succs: 60 59 )
basic block 57 is a predecessor
got the corresponding RichBasicBlock
<57> (succs: 58 71 ) is white, visiting it first
basic block 54 is a predecessor
got the corresponding RichBasicBlock
<54> (succs: 57 55 ) is white, visiting it first
basic block 53 is a predecessor
got the corresponding RichBasicBlock
<53> (succs: 54 55 ) is white, visiting it first
basic block 52 is a predecessor
got the corresponding RichBasicBlock
<52> (succs: 53 55 ) is white, visiting it first
basic block 51 is a predecessor
got the corresponding RichBasicBlock
<51> (succs: 52 55 ) is white, visiting it first
basic block 50 is a predecessor
got the corresponding RichBasicBlock
<50> (succs: 51 57 ) is white, visiting it first
basic block 48 is a predecessor
got the corresponding RichBasicBlock
<48> (succs: 49 50 ) is white, visiting it first
basic block 41 is a predecessor
got the corresponding RichBasicBlock
(Loop header) <41> (succs: 48 42 ) is white, visiting it first
basic block 49 is a predecessor
Stuck in a loop, abandoning this path
basic block 40 is a predecessor
got the corresponding RichBasicBlock
<40> (succs: 41 ) is white, visiting it first
basic block 39 is a predecessor
got the corresponding RichBasicBlock
(Loop header) <39> (succs: 40 50 ) is white, visiting it first
basic block 38 is a predecessor
got the corresponding RichBasicBlock
<38> (succs: 39 ) is white, visiting it first
basic block 37 is a predecessor
got the corresponding RichBasicBlock
0x16725d0 is red
0x1672700 is red
basic block 56 is a predecessor
Stuck in a loop, abandoning this path
0x16727e0 is red
0x1672910 is red
0x16729f0 is red
basic block 46 is a predecessor
got the corresponding RichBasicBlock
<46> (succs: 47 48 ) is white, visiting it first
basic block 45 is a predecessor
got the corresponding RichBasicBlock
<45> (succs: 47 46 ) is white, visiting it first
basic block 43 is a predecessor
got the corresponding RichBasicBlock
<43> (succs: 44 45 ) is white, visiting it first
basic block 42 is a predecessor
got the corresponding RichBasicBlock
<42> (succs: 43 47 ) is white, visiting it first
basic block 41 is a predecessor
got the corresponding RichBasicBlock
0x16729f0 is red
0x1672b20 is red
0x1672c50 is red
0x1672e60 is red
0x1672f90 is red
0x16731a0 is red
basic block 39 is a predecessor
got the corresponding RichBasicBlock
0x16727e0 is red
0x16733b0 is red
0x16734e0 is red
0x1673610 is red
0x1673740 is red
0x15848c0 is red
basic block 37 is a predecessor
got the corresponding RichBasicBlock
0x16725d0 is red
basic block 55 is a predecessor
got the corresponding RichBasicBlock
<55> (succs: 57 56 ) is white, visiting it first
basic block 52 is a predecessor
got the corresponding RichBasicBlock
0x1673610 is red
basic block 51 is a predecessor
got the corresponding RichBasicBlock
0x16734e0 is red
basic block 54 is a predecessor
got the corresponding RichBasicBlock
0x15848c0 is red
basic block 53 is a predecessor
got the corresponding RichBasicBlock
0x1673740 is red
0x15849f0 is red
basic block 47 is a predecessor
got the corresponding RichBasicBlock
<47> (succs: 57 ) is white, visiting it first
basic block 42 is a predecessor
got the corresponding RichBasicBlock
0x1672b20 is red
basic block 46 is a predecessor
got the corresponding RichBasicBlock
0x1672f90 is red
basic block 45 is a predecessor
got the corresponding RichBasicBlock
0x1672e60 is red
0x16730c0 is red
basic block 50 is a predecessor
got the corresponding RichBasicBlock
0x16733b0 is red
0x1584c00 is red
These are all the basic blocks:
<17> (succs: 18 19 )
<4> (succs: 5 6 )
<5> (succs: 69 )
<6> (succs: 7 8 )
<7> (succs: 68 8 )
<8> (succs: 9 10 )
<11> (succs: 12 13 )
<13> (succs: 14 15 )
<15> (succs: 16 17 )
<18> (succs: 26 )
<19> (succs: 20 21 )
<20> (succs: 22 )
<21> (succs: 22 )
<22> (succs: 64 23 )
<23> (succs: 24 25 )
<24> (succs: 25 )
<25> (succs: 26 )
<26> (succs: 27 28 )
<28> (succs: 61 29 )
<29> (succs: 61 30 )
<30> (succs: 32 31 )
<31> (succs: 32 )
<32> (succs: 61 33 )
<33> (succs: 61 34 )
<34> (succs: 61 35 )
<35> (succs: 61 36 )
<36> (succs: 70 37 )
<37> (succs: 57 38 )
(Loop header) <41> (succs: 48 42 )
<42> (succs: 43 47 )
<43> (succs: 44 45 )
<44> (succs: 70 )
<45> (succs: 47 46 )
<46> (succs: 47 48 )
<47> (succs: 57 )
<48> (succs: 49 50 )
<50> (succs: 51 57 )
<51> (succs: 52 55 )
<52> (succs: 53 55 )
<53> (succs: 54 55 )
<54> (succs: 57 55 )
<55> (succs: 57 56 )
<57> (succs: 58 71 )
<58> (succs: 60 59 )
<60> (succs: 69 )
<61> (succs: 63 62 )
<63> (succs: 64 )
<64> (succs: 65 )
<65> (succs: 66 )
<66> (succs: 67 68 )
<67> (succs: 68 )
<68> (succs: 69 )
<69> (succs: 1 )
<10> (succs: 66 11 )
<70> (succs: 71 )
<71> (succs: 61 )
(Loop header) <39> (succs: 40 50 )
<9> (succs: 68 )
<12> (succs: 65 )
<14> (succs: 64 )
<16> (succs: 18 )
<27> (succs: 64 )
<38> (succs: 39 )
<40> (succs: 41 )
<49> (succs: 41 )
<56> (succs: 39 )
<59> (succs: 69 )
<62> (succs: 64 )
<3> (succs: 4 )
<0> (succs: 2 )
<1> (succs: )
<2> (succs: 3 4 )
These are the basic blocks from the interesting subgraph:

Starting the walk until <58> (succs: 60 59 )
Configuration created, _constraints size: 0
Reached <0> (succs: 2 )
Handled all statements
----------------------
Result of the analysis
paths found: 0
paths rejected: 1
----------------------

